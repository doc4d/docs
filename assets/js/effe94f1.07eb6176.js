"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[70022],{494025:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=n(474848),s=n(28453);const r={id:"read-only",title:"READ ONLY",slug:"/commands/read-only",displayed_sidebar:"docs"},d=void 0,a={id:"commands-legacy/read-only",title:"READ ONLY",description:"READ ONLY {( aTable | * )}",source:"@site/docs/commands-legacy/read-only.md",sourceDirName:"commands-legacy",slug:"/commands/read-only",permalink:"/docs/next/commands/read-only",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fread-only.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"read-only",title:"READ ONLY",slug:"/commands/read-only",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"Locked records info",permalink:"/docs/next/commands/locked-records-info"},next:{title:"Read only state",permalink:"/docs/next/commands/read-only-state"}},c={},l=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function i(e){const t={a:"a",br:"br",em:"em",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"READ ONLY"})," {( aTable | * )}"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Parameter"}),(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsx)(t.tbody,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"aTable | *"}),(0,o.jsx)(t.td,{children:"Table, Operator"}),(0,o.jsx)(t.td,{children:"\u2192"}),(0,o.jsx)(t.td,{children:"Table for which to set read-only state, or * for all the tables, or Default table, if omitted"})]})})]}),"\n",(0,o.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,o.jsxs)(t.p,{children:["READ ONLY changes the state of ",(0,o.jsx)(t.em,{children:"aTable"})," to read-only for the process in which it is called. All subsequent records that are loaded are locked, and you cannot make any changes made to them. If the optional * parameter is specified, all tables are changed to read-only state."]}),"\n",(0,o.jsx)(t.p,{children:"Use READ ONLY when you do not need to modify the record or records."}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Note:"})," This command is not retroactive. A record is loaded according to the table\u2019s read/write status at the time of loading. To load a record from a read/write table in read-only mode, you must first change the table state to read-only."]}),"\n",(0,o.jsx)(t.h4,{id:"see-also",children:"See also"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"/docs/next/commands/read-only-state",children:"Read only state"}),(0,o.jsx)(t.br,{}),"\n",(0,o.jsx)(t.a,{href:"/docs/next/commands/read-write",children:"READ WRITE"}),(0,o.jsx)(t.br,{}),"\n",(0,o.jsx)(t.em,{children:"Record Locking"})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(i,{...e})}):i(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>a});var o=n(296540);const s={},r=o.createContext(s);function d(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);