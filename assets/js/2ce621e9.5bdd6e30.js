"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[59062],{537025:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var i=n(474848),s=n(28453);const r={id:"object-get-indicator-type",title:"OBJECT Get indicator type",slug:"/commands/object-get-indicator-type",displayed_sidebar:"docs"},d=void 0,c={id:"commands-legacy/object-get-indicator-type",title:"OBJECT Get indicator type",description:"OBJECT Get indicator type ( { ;} object* ) -> Function result",source:"@site/docs/commands-legacy/object-get-indicator-type.md",sourceDirName:"commands-legacy",slug:"/commands/object-get-indicator-type",permalink:"/docs/next/commands/object-get-indicator-type",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fobject-get-indicator-type.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"object-get-indicator-type",title:"OBJECT Get indicator type",slug:"/commands/object-get-indicator-type",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"OBJECT Get horizontal alignment",permalink:"/docs/next/commands/object-get-horizontal-alignment"},next:{title:"OBJECT Get keyboard layout",permalink:"/docs/next/commands/object-get-keyboard-layout"}},o={},a=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function l(e){const t={a:"a",br:"br",em:"em",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"OBJECT Get indicator type"})," ( {* ;} ",(0,i.jsx)(t.em,{children:"object"})," ) -> Function result"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"*"}),(0,i.jsx)(t.td,{children:"Operator"}),(0,i.jsx)(t.td,{children:"\ud83e\udc52"}),(0,i.jsxs)(t.td,{children:["If specified, object is an object name (string)",(0,i.jsx)(t.br,{}),"If omitted, object is a variable"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"any"}),(0,i.jsx)(t.td,{children:"\ud83e\udc52"}),(0,i.jsx)(t.td,{children:"Object name (if * is specified) or Variable (if * is omitted)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Function result"}),(0,i.jsx)(t.td,{children:"Longint"}),(0,i.jsx)(t.td,{children:"\ud83e\udc50"}),(0,i.jsx)(t.td,{children:"Indicator type"})]})]})]}),"\n",(0,i.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"OBJECT Get indicator type"})," command returns the current indicator type assigned to the thermometer(s) designated by the ",(0,i.jsx)(t.em,{children:"object"})," and ",(0,i.jsx)(t.em,{children:"*"})," parameters."]}),"\n",(0,i.jsxs)(t.p,{children:["You can set the indicator type using the Property List in Design mode, or using the ",(0,i.jsx)(t.a,{href:"/docs/next/commands/object-set-indicator-type",children:"OBJECT SET INDICATOR TYPE"})," command."]}),"\n",(0,i.jsxs)(t.p,{children:["Passing the optional ",(0,i.jsx)(t.em,{children:"*"})," parameter indicates that the ",(0,i.jsx)(t.em,{children:"object"})," parameter is an object name (string). If you do not pass this parameter, it indicates that the ",(0,i.jsx)(t.em,{children:"object"})," parameter is a field or variable. In this case, you pass a field or variable reference instead of a string (field or variable object only)."]}),"\n",(0,i.jsxs)(t.p,{children:['You can compare the value returned by the command with the following constants, found in the "',(0,i.jsx)(t.em,{children:"Form Objects (Properties)"}),'" theme:']}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Constant"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Value"}),(0,i.jsx)(t.th,{children:"Comment"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Asynchronous progress bar"}),(0,i.jsx)(t.td,{children:"Longint"}),(0,i.jsx)(t.td,{children:"3"}),(0,i.jsx)(t.td,{children:"Circular indicator displaying continuous animation"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Barber shop"}),(0,i.jsx)(t.td,{children:"Longint"}),(0,i.jsx)(t.td,{children:"2"}),(0,i.jsx)(t.td,{children:"Bar displaying continuous animation"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Progress bar"}),(0,i.jsx)(t.td,{children:"Longint"}),(0,i.jsx)(t.td,{children:"1"}),(0,i.jsx)(t.td,{children:"Standard progress bar"})]})]})]}),"\n",(0,i.jsx)(t.h4,{id:"see-also",children:"See also"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"/docs/next/commands/object-set-indicator-type",children:"OBJECT SET INDICATOR TYPE"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>c});var i=n(296540);const s={},r=i.createContext(s);function d(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);