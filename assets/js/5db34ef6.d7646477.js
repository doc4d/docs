"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[22556],{245763:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var t=n(474848),s=n(28453);const o={id:"get-last-error-stack",title:"GET LAST ERROR STACK",slug:"/commands/get-last-error-stack",displayed_sidebar:"docs"},a=void 0,c={id:"commands-legacy/get-last-error-stack",title:"GET LAST ERROR STACK",description:"GET LAST ERROR STACK ( codesArray ; intCompArray ; textArray )",source:"@site/docs/commands-legacy/get-last-error-stack.md",sourceDirName:"commands-legacy",slug:"/commands/get-last-error-stack",permalink:"/docs/next/commands/get-last-error-stack",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fget-last-error-stack.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"get-last-error-stack",title:"GET LAST ERROR STACK",slug:"/commands/get-last-error-stack",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"Get assert enabled",permalink:"/docs/next/commands/get-assert-enabled"},next:{title:"Last errors",permalink:"/docs/next/commands/last-errors"}},d={},i=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function l(e){const r={a:"a",br:"br",em:"em",h4:"h4",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"GET LAST ERROR STACK"})," ( ",(0,t.jsx)(r.em,{children:"codesArray"})," ; ",(0,t.jsx)(r.em,{children:"intCompArray"})," ; ",(0,t.jsx)(r.em,{children:"textArray"})," )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Parameter"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"codesArray"}),(0,t.jsx)(r.td,{children:"Array integer"}),(0,t.jsx)(r.td,{children:"\u2190"}),(0,t.jsx)(r.td,{children:"Error numbers"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"intCompArray"}),(0,t.jsx)(r.td,{children:"Text array"}),(0,t.jsx)(r.td,{children:"\u2190"}),(0,t.jsx)(r.td,{children:"Internal component codes"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"textArray"}),(0,t.jsx)(r.td,{children:"Text array"}),(0,t.jsx)(r.td,{children:"\u2190"}),(0,t.jsx)(r.td,{children:"Text of errors"})]})]})]}),"\n",(0,t.jsx)(r.h4,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.strong,{children:"GET LAST ERROR STACK"}),' command returns information about the current stack of errors of the 4D application. When a 4D statement causes an error, the current error stack contains a description of the error as well as any series of errors generated. For example, a "disk full" type error causes a write error in the file then an error in the record saving command: the stack will therefore contain three errors. If the last 4D statement did not generate an error, the current error stack is empty.']}),"\n",(0,t.jsx)(r.p,{children:"This generic command can be used to process any type of error that may occur in the 4D application."}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Note:"})," However, to obtain detailed information concerning the errors generated by an ODBC source, it will be necessary to use the ",(0,t.jsx)(r.a,{href:"/docs/next/commands/sql-get-last-error",children:"SQL GET LAST ERROR"})," command."]}),"\n",(0,t.jsxs)(r.p,{children:["This command must be called from an on error call method installed by the ",(0,t.jsx)(r.a,{href:"/docs/next/commands/on-err-call",children:"ON ERR CALL"})," command."]}),"\n",(0,t.jsx)(r.p,{children:"The information is returned in three synchronized arrays:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.em,{children:"codesArray"}),": This array receives the list of error codes generated."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.em,{children:"intCompArray"}),": This array contains the codes of the internal components associated with each error."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.em,{children:"textArray"}),": This array contains the text of each error."]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["The list of error codes and their text is provided in the sections of the ",(0,t.jsx)(r.em,{children:"Error Codes"})," theme."]}),"\n",(0,t.jsx)(r.h4,{id:"see-also",children:"See also"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"/docs/next/commands/last-errors",children:"Last errors"}),(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)(r.a,{href:"/docs/next/commands/on-err-call",children:"ON ERR CALL"}),(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)(r.a,{href:"/docs/next/commands/sql-get-last-error",children:"SQL GET LAST ERROR"})]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>c});var t=n(296540);const s={},o=t.createContext(s);function a(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);