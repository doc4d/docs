"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[21045],{603905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(i,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},385732:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});n(667294);var r=n(603905);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const l={id:"singleton",title:"$singleton"},s=void 0,i={unversionedId:"REST/singleton",id:"REST/singleton",title:"$singleton",description:"You can directly call exposed functions of your shared singletons through REST.",source:"@site/docs/REST/$singleton.md",sourceDirName:"REST",slug:"/REST/singleton",permalink:"/docs/next/REST/singleton",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20REST%2F%24singleton.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"singleton",title:"$singleton"},sidebar:"docs",previous:{title:"$info",permalink:"/docs/next/REST/info"},next:{title:"$upload",permalink:"/docs/next/REST/upload"}},c={},p=[{value:"Function calls",id:"function-calls",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Response",id:"response",level:4}],u={toc:p};function d(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)("wrapper",a({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"You can directly call exposed ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/next/Concepts/classes#singleton-classes"}),"functions of your shared singletons")," through REST."),(0,r.kt)("p",null,"Singleton functions are called in POST requests with the ",(0,r.kt)("inlineCode",{parentName:"p"},"$singleton")," command and without ",(0,r.kt)("inlineCode",{parentName:"p"},"()"),". For example, if you have defined a ",(0,r.kt)("inlineCode",{parentName:"p"},"buildVehicle()")," function in the ",(0,r.kt)("inlineCode",{parentName:"p"},"VehicleFactory")," shared singleton class, you could call it using the following request:"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-json"}),"/rest/$singleton/VehicleFactory/buildVehicle\n")),(0,r.kt)("p",null,"with data in the body of the POST request: ",'["truck"]'),(0,r.kt)("p",null,"In 4D language, this call is equivalent to:"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-4d"}),'$singleton:=cs.VehicleFactory.me.buildVehicle("truck")\n')),(0,r.kt)("admonition",a({},{type:"note"}),(0,r.kt)("p",{parentName:"admonition"},"Keep in mind that only functions with the ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/next/ORDA/ordaClasses#exposed-vs-non-exposed-functions"}),(0,r.kt)("inlineCode",{parentName:"a"},"exposed")," keyword")," can be directly called from REST requests.")),(0,r.kt)("h2",a({},{id:"function-calls"}),"Function calls"),(0,r.kt)("p",null,"Singleton functions must always be called using REST ",(0,r.kt)("strong",{parentName:"p"},"POST")," requests (a GET request will receive an error). The formal syntax is:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"/rest/$singleton/SingletonClass/SingletonClassFunction")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"All 4D code called from REST requests ",(0,r.kt)("strong",{parentName:"p"},"must be thread-safe")," if the project runs in compiled mode, because the REST Server always uses preemptive processes in this case (the ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/next/WebServer/preemptiveWeb#enabling-the-preemptive-mode-for-the-web-server"}),(0,r.kt)("em",{parentName:"a"},"Use preemptive process")," setting value")," is ignored by the REST Server).")),(0,r.kt)("admonition",a({},{type:"info"}),(0,r.kt)("p",{parentName:"admonition"},"You can restrict calls to specific singleton functions by configuring appropriate privileges in the ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/next/ORDA/privileges#rolesjson-file"}),(0,r.kt)("strong",{parentName:"a"},"roles.json"))," file.")),(0,r.kt)("h2",a({},{id:"parameters"}),"Parameters"),(0,r.kt)("p",null,"You can send parameters to singleton functions. On the server side, they will be received in the ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/next/Concepts/parameters#declaring-parameters"}),"declared parameters")," of the singleton class functions."),(0,r.kt)("p",null,"Sending parameters to singleton functions is exactly the same as sending parameter to ORDA class functions. Please refer to ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/next/REST/classFunctions#parameters"}),"the ",(0,r.kt)("strong",{parentName:"a"},"Parameters"),' paragraph of the "Calling class functions" page')," for a detailed description."),(0,r.kt)("h2",a({},{id:"example"}),"Example"),(0,r.kt)("p",null,"You have created a simple shared singleton with an exposed function:"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-4d"}),'//class mySingleton\n\nshared singleton Class constructor()\n\nexposed Function sayHello ($value : Text)\n    return "Hello "+$value\n\n')),(0,r.kt)("admonition",a({},{type:"note"}),(0,r.kt)("p",{parentName:"admonition"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"mySingleton")," class and ",(0,r.kt)("inlineCode",{parentName:"p"},"sayHello")," function are listed when you call the ",(0,r.kt)("a",a({parentName:"p"},{href:"/docs/next/REST/catalog#singleton"}),(0,r.kt)("inlineCode",{parentName:"a"},"$catalog"))," command.")),(0,r.kt)("p",null,"You can then run this request:  "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"POST")," ",(0,r.kt)("inlineCode",{parentName:"p"},"/rest/$singleton/mySingleton/sayHello")),(0,r.kt)("p",null,"Body of the request: ",'["John"]'),(0,r.kt)("h4",a({},{id:"response"}),"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",a({parentName:"pre"},{className:"language-json"}),'{\n    "result": "Hello John"\n}\n')))}d.isMDXComponent=!0}}]);