"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[55906],{702893:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=t(474848),r=t(28453);const i={id:"c-pointer",title:"C_POINTER",slug:"/commands/c-pointer",displayed_sidebar:"docs"},a=void 0,o={id:"commands-legacy/c-pointer",title:"C_POINTER",description:"C_POINTER ( {method ;} variable {; variable2 ; ... ; variableN} )",source:"@site/docs/commands-legacy/c-pointer.md",sourceDirName:"commands-legacy",slug:"/commands/c-pointer",permalink:"/docs/next/commands/c-pointer",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fc-pointer.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"c-pointer",title:"C_POINTER",slug:"/commands/c-pointer",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"C_PICTURE",permalink:"/docs/next/commands/c-picture"},next:{title:"C_REAL",permalink:"/docs/next/commands/c-real"}},d={},c=[{value:"Description",id:"description",level:4},{value:"Advanced Use",id:"advanced-use",level:5},{value:"Examples",id:"examples",level:4},{value:"See also",id:"see-also",level:4}];function l(e){const n={a:"a",br:"br",em:"em",h4:"h4",h5:"h5",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"C_POINTER"})," ( {",(0,s.jsx)(n.em,{children:"method"})," ;} ",(0,s.jsx)(n.em,{children:"variable"})," {; ",(0,s.jsx)(n.em,{children:"variable2"})," ; ... ; ",(0,s.jsx)(n.em,{children:"variableN"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"method"}),(0,s.jsx)(n.td,{children:"Method"}),(0,s.jsx)(n.td,{children:"\ud83e\udc52"}),(0,s.jsx)(n.td,{children:"Optional name of method"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"variable"}),(0,s.jsx)(n.td,{children:"Variable"}),(0,s.jsx)(n.td,{children:"\ud83e\udc52"}),(0,s.jsx)(n.td,{children:"Name of variable(s) to declare"})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"The C_POINTER command casts each specified variable as a Pointer variable."}),"\n",(0,s.jsxs)(n.p,{children:["The first form of the command, in which the optional ",(0,s.jsx)(n.em,{children:"method"})," parameter is NOT passed, is used to declare and type any process, interprocess, or local variable."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note:"})," This form can be used in interpreted databases."]}),"\n",(0,s.jsxs)(n.p,{children:["The second form of the command, in which the optional ",(0,s.jsx)(n.em,{children:"method"})," parameter IS passed, is used to predeclare to the compiler the result and/or the parameters ($0, $1, $2 etc) for a method. Use this form of the command in order to skip the Typing variables phase while compiling a database, saving compilation time."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"WARNING:"})," The second form cannot be executed in interpreted mode. For this reason, if you are using this syntax, keep it in a method that is not executed in interpreted mode. The name of this method must start with \u201cCOMPILER.\u201d"]}),"\n",(0,s.jsx)(n.h5,{id:"advanced-use",children:"Advanced Use"}),"\n",(0,s.jsxs)(n.p,{children:["The syntax ",(0,s.jsx)(n.strong,{children:"C_POINTER"}),"(${...}) allows you to declare a variable number of parameters of the same type, under the condition that these are the last parameters for the method. For example, the declaration ",(0,s.jsx)(n.strong,{children:"C_POINTER"}),"(${5}) tells 4D and the compiler that starting with the fifth parameter, the method can receive a variable number of parameters of that type. For more information, see the ",(0,s.jsx)(n.em,{children:"Parameter indirection"})," section."]}),"\n",(0,s.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,s.jsxs)(n.p,{children:["See examples in the section ",(0,s.jsx)(n.em,{children:"Compiler Commands"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"see-also",children:"See also"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"Compiler Commands"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"/docs/next/commands/count-parameters",children:"Count parameters"})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(296540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);