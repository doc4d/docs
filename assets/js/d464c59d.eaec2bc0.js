"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[22057],{603905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var l=n(667294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=l.createContext({}),s=function(e){var t=l.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return l.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,k=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return n?l.createElement(k,r(r({ref:t},p),{},{components:n})):l.createElement(k,r({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var s=2;s<o;s++)r[s]=n[s];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},819110:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>p});n(667294);var l=n(603905);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e},a.apply(this,arguments)}function o(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},o=Object.keys(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)n=o[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const r={id:"collection",title:"Collection"},i=void 0,c={unversionedId:"Concepts/collection",id:"Concepts/collection",title:"Collection",description:"Collections are ordered lists of values of similar or mixed types (text, number, date, object, boolean, collection, or null).",source:"@site/docs/Concepts/dt_collection.md",sourceDirName:"Concepts",slug:"/Concepts/collection",permalink:"/docs/next/Concepts/collection",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fdt_collection.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"collection",title:"Collection"},sidebar:"docs",previous:{title:"Boolean",permalink:"/docs/next/Concepts/boolean"},next:{title:"Date",permalink:"/docs/next/Concepts/date"}},s={},p=[{value:"Instantiation",id:"instantiation",level:2},{value:"<code>New collection</code> command",id:"new-collection-command",level:3},{value:"<code>[]</code> operator",id:"-operator",level:3},{value:"Regular or shared collection",id:"regular-or-shared-collection",level:3},{value:"Collection functions",id:"collection-functions",level:2},{value:"propertyPath parameter",id:"propertypath-parameter",level:3},{value:"Collection operators",id:"collection-operators",level:2},{value:"Undefined",id:"undefined",level:2}],u={toc:p};function m(e){var{components:t}=e,n=o(e,["components"]);return(0,l.kt)("wrapper",a({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Collections are ordered lists of values of similar or mixed types (text, number, date, object, boolean, collection, or null)."),(0,l.kt)("p",null,"Collection type variables are managed using ",(0,l.kt)("a",a({parentName:"p"},{href:"/docs/next/Concepts/object#properties"}),"object notation"),"."),(0,l.kt)("p",null,"To access a collection element, you need to pass the element number inside square brackets:"),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"}),"collectionRef[expression]\n")),(0,l.kt)("p",null,"You can pass any valid 4D expression which returns a positive integer in ",(0,l.kt)("em",{parentName:"p"},"expression"),". Examples:"),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"})," myCollection[5]  //access to 6th element of the collection\n myCollection[$var]\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Warning:")," Collection elements are numbered from 0."),(0,l.kt)("p",null,"You can assign a value to a collection element or get a collection element value:"),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"}),' myCol[10]:="My new element"\n $myVar:=myCol[0]\n')),(0,l.kt)("p",null,"If you assign an element's index that surpasses the last existing element of the collection, the collection is automatically resized and all new intermediary elements are assigned a null value:"),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"}),' var myCol : Collection\n myCol:=New collection("A";"B")\n myCol[5]:="Z"\n  //myCol[2]=null\n  //myCol[3]=null\n  //myCol[4]=null\n')),(0,l.kt)("h2",a({},{id:"instantiation"}),"Instantiation"),(0,l.kt)("p",null,"Collections must have been instantiated, otherwise trying to read or modify their elements will generate a syntax error."),(0,l.kt)("p",null,"Collection instantiation can be done in one of the following ways:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"using the ",(0,l.kt)("a",a({parentName:"li"},{href:"/docs/next/API/CollectionClass#new-collection"}),(0,l.kt)("inlineCode",{parentName:"a"},"New collection"))," command,"),(0,l.kt)("li",{parentName:"ul"},"using the ",(0,l.kt)("inlineCode",{parentName:"li"},"[]")," operator.")),(0,l.kt)("admonition",a({},{type:"info"}),(0,l.kt)("p",{parentName:"admonition"},"Several 4D commands and functions return collections, for example ",(0,l.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv19R/help/command/en/page1713.html"}),(0,l.kt)("inlineCode",{parentName:"a"},"Get Monitored Activity"))," or ",(0,l.kt)("a",a({parentName:"p"},{href:"/docs/next/API/CollectionClass#copy"}),(0,l.kt)("inlineCode",{parentName:"a"},"collection.copy")),". In this case, it is not necessary to instantiate explicitely the collection, the 4D language does it for you.")),(0,l.kt)("h3",a({},{id:"new-collection-command"}),(0,l.kt)("inlineCode",{parentName:"h3"},"New collection")," command"),(0,l.kt)("p",null,"The ",(0,l.kt)("a",a({parentName:"p"},{href:"/docs/next/API/CollectionClass#new-collection"}),(0,l.kt)("inlineCode",{parentName:"a"},"New collection"))," command creates a new empty or prefilled collection and returns its reference. "),(0,l.kt)("p",null,"Examples:"),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"}),' var $colVar : Collection //declaration of a collection type 4D variable\n $colVar:=New collection //instantiation of the collection and assignment to the 4D variable\n \n var $colFilled : Collection\n $colFilled:=New collection("a";"b";1;42;{}) //instantiation and assignment of a prefilled collection\n')),(0,l.kt)("h3",a({},{id:"-operator"}),(0,l.kt)("inlineCode",{parentName:"h3"},"[]")," operator"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"[]")," operator allows you to create a ",(0,l.kt)("strong",{parentName:"p"},"collection literal"),". A collection literal is a list of zero or more expressions, each of which represents a collection element, enclosed in square brackets (",(0,l.kt)("inlineCode",{parentName:"p"},"[]"),"). When you create a collection using a collection literal, it is instantiated with the specified values as its elements, and its length is set to the number of arguments specified."),(0,l.kt)("p",null,"Since any element is considered an expression, you can create sub-collections using ",(0,l.kt)("inlineCode",{parentName:"p"},"[]")," in elements.  You can also create and reference ",(0,l.kt)("strong",{parentName:"p"},"object literals"),". "),(0,l.kt)("p",null,"If an element is undefined, it will appear as Null in the collection."),(0,l.kt)("p",null,"Examples:"),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"}),'var $col1; $col2; $users : Collection\n$col1:=[] //empty collection\n$col2:=[1;2;3;4;5;6] //collection of numbers\n//collection of objects\n$users:=[{name: "Alice"; \\\n    height: 183; \\\n    eyecolor: "hazel"; \\\n    id: $col2[5]\\\n    }; \\\n    {name: "Bob"; \\\n    height: 172; \\\n    eyecolor: "blue"\\\n    }]\n')),(0,l.kt)("admonition",a({},{type:"note"}),(0,l.kt)("p",{parentName:"admonition"},"If you create a collection literal containing a single element, make sure you do not use a name corresponding to an existing table name, otherwise the table syntax ",(0,l.kt)("inlineCode",{parentName:"p"},"[tableName]")," will take priority. ")),(0,l.kt)("h3",a({},{id:"regular-or-shared-collection"}),"Regular or shared collection"),(0,l.kt)("p",null,"You can create two types of collections:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"regular (non-shared) collections, using the ",(0,l.kt)("a",a({parentName:"li"},{href:"/docs/next/API/CollectionClass#new-collection"}),(0,l.kt)("inlineCode",{parentName:"a"},"New collection"))," command or collection literal syntax (",(0,l.kt)("inlineCode",{parentName:"li"},"[]"),"). These collections can be edited without any specific access control but cannot be shared between processes. "),(0,l.kt)("li",{parentName:"ul"},"shared collections, using the ",(0,l.kt)("a",a({parentName:"li"},{href:"/docs/next/API/CollectionClass#new-shared-collection"}),(0,l.kt)("inlineCode",{parentName:"a"},"New shared collection"))," command. These collections can be shared between processes, including preemptive threads. Access to these collections is controlled by ",(0,l.kt)("a",a({parentName:"li"},{href:"/docs/next/Concepts/shared#useend-use"}),(0,l.kt)("inlineCode",{parentName:"a"},"Use...End use"))," structures. ")),(0,l.kt)("p",null,"For more information, refer to the ",(0,l.kt)("a",a({parentName:"p"},{href:"/docs/next/Concepts/shared"}),"Shared objects and collections")," section."),(0,l.kt)("h2",a({},{id:"collection-functions"}),"Collection functions"),(0,l.kt)("p",null,"4D collection references benefit from special class functions (sometimes named ",(0,l.kt)("em",{parentName:"p"},"member functions"),"). Collection functions are listed in the ",(0,l.kt)("a",a({parentName:"p"},{href:"/docs/next/API/CollectionClass"}),"Class API Reference")," section."),(0,l.kt)("p",null,"For example:"),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"}),"$newCol:=$col.copy() //deep copy of $col to $newCol\n$col.push(10;100) //add 10 and 100 to the collection\n")),(0,l.kt)("p",null,"Some functions return the original collection after modification, so that you can run the calls in a sequence:"),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"})," $col:=New collection(5;20)\n $col2:=$col.push(10;100).sort() //$col2=[5,10,20,100]\n")),(0,l.kt)("h3",a({},{id:"propertypath-parameter"}),"propertyPath parameter"),(0,l.kt)("p",null,"Several functions accept a ",(0,l.kt)("em",{parentName:"p"},"propertyPath")," as parameter. This parameter stands for:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'either an object property name, for example "lastName"'),(0,l.kt)("li",{parentName:"ul"},'or an object property path, i.e. a hierarchical sequence of sub-properties linked with dot characters, for example "employee.children.firstName".')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Warning:")," When using functions and ",(0,l.kt)("em",{parentName:"p"},"propertyPath"),' parameters, you cannot use ".", "',"[ ]",'", or spaces in property names since it will prevent 4D from correctly parsing the path:'),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"}),' $vmin:=$col.min("My.special.property") //undefined\n $vmin:=$col.min(["My.special.property"]) //error\n')),(0,l.kt)("h2",a({},{id:"collection-operators"}),"Collection operators"),(0,l.kt)("p",null,"You can use comparison operators with ",(0,l.kt)("strong",{parentName:"p"},"collection references"),", which means that you can evaluate if two or more references point to the same instance of a collection. "),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"}),'var $c1:=["a";42] //reference to an instance\nvar $c2:=["a";42] //reference to a different instance\nvar $c3:=$c1 //reference to the same instance\n')),(0,l.kt)("p",null,"Based upon the code above, the comparison table is: "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",a({parentName:"tr"},{align:null}),"Operation"),(0,l.kt)("th",a({parentName:"tr"},{align:null}),"Syntax"),(0,l.kt)("th",a({parentName:"tr"},{align:null}),"Returns"),(0,l.kt)("th",a({parentName:"tr"},{align:null}),"Expression"),(0,l.kt)("th",a({parentName:"tr"},{align:null}),"Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",a({parentName:"tr"},{align:null}),"Equality"),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"collectionRef = collectionRef"),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"Boolean"),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"$c1 = $c3"),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"True")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",a({parentName:"tr"},{align:null})),(0,l.kt)("td",a({parentName:"tr"},{align:null})),(0,l.kt)("td",a({parentName:"tr"},{align:null})),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"$c1 = $c2"),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",a({parentName:"tr"},{align:null}),"Inequality"),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"collectionRef # collectionRef"),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"Boolean"),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"$c1 # $c3"),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",a({parentName:"tr"},{align:null})),(0,l.kt)("td",a({parentName:"tr"},{align:null})),(0,l.kt)("td",a({parentName:"tr"},{align:null})),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"$c1 # $c2"),(0,l.kt)("td",a({parentName:"tr"},{align:null}),"True")))),(0,l.kt)("h2",a({},{id:"undefined"}),"Undefined"),(0,l.kt)("p",null,"Reading the ",(0,l.kt)("strong",{parentName:"p"},"length")," property of an undefined collection produces 0:"),(0,l.kt)("pre",null,(0,l.kt)("code",a({parentName:"pre"},{className:"language-4d"}),"     var $c : Collection //variable created but no collection is defined\n     $size:=$c.length //$size = 0\n")))}m.isMDXComponent=!0}}]);