"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[71687],{303805:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var r=t(474848),d=t(28453);const s={id:"old",title:"Old",slug:"/commands/old",displayed_sidebar:"docs"},i=void 0,o={id:"commands-legacy/old",title:"Old",description:"Old ( aField ) -> Function result",source:"@site/docs/commands-legacy/old.md",sourceDirName:"commands-legacy",slug:"/commands/old",permalink:"/docs/next/commands/old",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fold.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"old",title:"Old",slug:"/commands/old",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"MODIFY RECORD",permalink:"/docs/next/commands/modify-record"},next:{title:"REJECT",permalink:"/docs/next/commands/reject"}},l={},a=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function c(e){const n={a:"a",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Old"})," ( ",(0,r.jsx)(n.em,{children:"aField"})," ) -> Function result"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"aField"}),(0,r.jsx)(n.td,{children:"Field"}),(0,r.jsx)(n.td,{children:"\ud83e\udc52"}),(0,r.jsx)(n.td,{children:"Field for which to return old value"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Function result"}),(0,r.jsx)(n.td,{children:"Expression"}),(0,r.jsx)(n.td,{children:"\ud83e\udc50"}),(0,r.jsx)(n.td,{children:"Original field value"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Old"})," command returns the value held in ",(0,r.jsx)(n.em,{children:"aField"})," before the field was programmatically assigned a value or modified in data entry."]}),"\n",(0,r.jsx)(n.p,{children:"Each time you change the current record for a table, 4D creates and maintains in memory a duplicated \u201cimage\u201d of the new current record when it is loaded in memory. When modifying a record, you work with the actual image of the record, not this duplicated image. This image is then discarded when you change the current record again."}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Old"})," returns the value from the duplicated image. In other words, for an existing record, it returns the value of the field as it is stored on disk. If a record is new, ",(0,r.jsx)(n.strong,{children:"Old"})," returns the default empty value for ",(0,r.jsx)(n.em,{children:"field"})," according to its type. For example, if ",(0,r.jsx)(n.em,{children:"field"})," is an Alpha field, ",(0,r.jsx)(n.strong,{children:"Old"})," returns an empty string. If ",(0,r.jsx)(n.em,{children:"field"})," is a numeric field, ",(0,r.jsx)(n.strong,{children:"Old"})," returns zero (0), and so on."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Old"})," works on ",(0,r.jsx)(n.em,{children:"aField"})," whether the field has been modified by a method or by the user during data entry. It can be applied to all field types."]}),"\n",(0,r.jsxs)(n.p,{children:["To restore the original value of a field, assign it the value returned by ",(0,r.jsx)(n.strong,{children:"Old"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," For technical reasons, in the case of Picture and BLOB type fields, the expression returned by ",(0,r.jsx)(n.strong,{children:"Old"})," cannot be used directly as a parameter for another command. It is necessary to pass the value via an intermediate variable. For example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-4d",children:"\xa0\xa0//Do NOT write (causes a syntax error):\n\xa0$size :=BLOB size(Old([theTable]theBlob))\xa0//INCORRECT\n\xa0\n\xa0\xa0//Write:\n\xa0$oldBLOB:=Old([theTable]theBlob)\n\xa0$size :=BLOB size($oldBLOB)\xa0//CORRECT\n"})}),"\n",(0,r.jsx)(n.h4,{id:"see-also",children:"See also"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/next/commands/modified",children:"Modified"})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(296540);const d={},s=r.createContext(d);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);