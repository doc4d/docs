"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[38960],{217430:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=n(474848),s=n(28453);const r={id:"listbox-get-column-width",title:"LISTBOX Get column width",slug:"/commands/listbox-get-column-width",displayed_sidebar:"docs"},d=void 0,o={id:"commands-legacy/listbox-get-column-width",title:"LISTBOX Get column width",description:"LISTBOX Get column width ( { ;} object {; minWidth {; maxWidth*}} )  -> Function result",source:"@site/docs/commands-legacy/listbox-get-column-width.md",sourceDirName:"commands-legacy",slug:"/commands/listbox-get-column-width",permalink:"/docs/next/commands/listbox-get-column-width",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Flistbox-get-column-width.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"listbox-get-column-width",title:"LISTBOX Get column width",slug:"/commands/listbox-get-column-width",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"LISTBOX Get column formula",permalink:"/docs/next/commands/listbox-get-column-formula"},next:{title:"LISTBOX Get footer calculation",permalink:"/docs/next/commands/listbox-get-footer-calculation"}},c={},l=[{value:"Description",id:"description",level:4},{value:"See also",id:"see-also",level:4}];function a(e){const t={a:"a",br:"br",em:"em",h4:"h4",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"LISTBOX Get column width"})," ( {* ;} ",(0,i.jsx)(t.em,{children:"object"})," {; ",(0,i.jsx)(t.em,{children:"minWidth"})," {; ",(0,i.jsx)(t.em,{children:"maxWidth"}),"}} )  -> Function result"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"*"}),(0,i.jsx)(t.td,{children:"Operator"}),(0,i.jsx)(t.td,{children:"\ud83e\udc52"}),(0,i.jsx)(t.td,{children:"If specified, object is an object name (string) If omitted, object is a variable"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"any"}),(0,i.jsx)(t.td,{children:"\ud83e\udc52"}),(0,i.jsx)(t.td,{children:"Object name (if * is specified) or Variable (if * is omitted)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"minWidth"}),(0,i.jsx)(t.td,{children:"Integer"}),(0,i.jsx)(t.td,{children:"\ud83e\udc58"}),(0,i.jsx)(t.td,{children:"Minimum column width (in pixels)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxWidth"}),(0,i.jsx)(t.td,{children:"Integer"}),(0,i.jsx)(t.td,{children:"\ud83e\udc58"}),(0,i.jsx)(t.td,{children:"Maximum column width (in pixels)"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Function result"}),(0,i.jsx)(t.td,{children:"Longint"}),(0,i.jsx)(t.td,{children:"\ud83e\udc50"}),(0,i.jsx)(t.td,{children:"Column width (in pixels)"})]})]})]}),"\n",(0,i.jsx)(t.h4,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"LISTBOX Get column width"})," command returns the width (in pixels) of the column set in the ",(0,i.jsx)(t.em,{children:"object"})," and ",(0,i.jsx)(t.em,{children:"*"})," parameters. You can pass either a list box column or a column header in the ",(0,i.jsx)(t.em,{children:"object"})," parameter."]}),"\n",(0,i.jsxs)(t.p,{children:["If you pass the optional ",(0,i.jsx)(t.em,{children:"*"})," parameter, you indicate that the ",(0,i.jsx)(t.em,{children:"object"})," parameter is an object name (string). If you do not pass this parameter, you indicate that the ",(0,i.jsx)(t.em,{children:"object"})," parameter is a variable. In this case, you pass a variable reference instead of a string. For more information about object names, refer to the ",(0,i.jsx)(t.em,{children:"Object Properties"})," section."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"LISTBOX Get column width"})," can return the resizing limits of the column in the ",(0,i.jsx)(t.em,{children:"minWidth"})," and ",(0,i.jsx)(t.em,{children:"maxWidth"})," parameters. These limits can be specified via the ",(0,i.jsx)(t.a,{href:"/docs/next/commands/listbox-set-column-width",children:"LISTBOX SET COLUMN WIDTH"})," command.",(0,i.jsx)(t.br,{}),"\nIf no minimum and/or maximum value has been set for the column, the corresponding parameter returns 0."]}),"\n",(0,i.jsx)(t.h4,{id:"see-also",children:"See also"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"/docs/next/commands/listbox-set-column-width",children:"LISTBOX SET COLUMN WIDTH"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var i=n(296540);const s={},r=i.createContext(s);function d(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);