"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[66251],{109227:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var s=n(474848),l=n(28453);const o={id:"sql-execute",title:"SQL EXECUTE",slug:"/commands/sql-execute",displayed_sidebar:"docs"},r=void 0,t={id:"commands-legacy/sql-execute",title:"SQL EXECUTE",description:"SQL EXECUTE ( instruccionSQL {; objAsoc}{; objAsoc2 ; ... ; objAsocN} )",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/commands-legacy/sql-execute.md",sourceDirName:"commands-legacy",slug:"/commands/sql-execute",permalink:"/docs/es/next/commands/sql-execute",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fsql-execute.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"sql-execute",title:"SQL EXECUTE",slug:"/commands/sql-execute",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"SQL End selection",permalink:"/docs/es/next/commands/sql-end-selection"},next:{title:"SQL EXECUTE SCRIPT",permalink:"/docs/es/next/commands/sql-execute-script"}},i={},c=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:4},{value:"Ejemplo 1",id:"ejemplo-1",level:4},{value:"Ejemplo 2",id:"ejemplo-2",level:4},{value:"Ejemplo 3",id:"ejemplo-3",level:4},{value:"Ejemplo 4",id:"ejemplo-4",level:4},{value:"Ejemplo 5",id:"ejemplo-5",level:4},{value:"Ejemplo 6",id:"ejemplo-6",level:4},{value:"Variables y conjuntos del sistema",id:"variables-y-conjuntos-del-sistema",level:4},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:4}];function d(e){const a={a:"a",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"SQL EXECUTE"})," ( ",(0,s.jsx)(a.em,{children:"instruccionSQL"})," {; ",(0,s.jsx)(a.em,{children:"objAsoc"}),"}{; ",(0,s.jsx)(a.em,{children:"objAsoc2"})," ; ... ; ",(0,s.jsx)(a.em,{children:"objAsocN"}),"} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{children:"Par\xe1metro"}),(0,s.jsx)(a.th,{children:"Tipo"}),(0,s.jsx)(a.th,{}),(0,s.jsx)(a.th,{children:"Descripci\xf3n"})]})}),(0,s.jsxs)(a.tbody,{children:[(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"instruccionSQL"}),(0,s.jsx)(a.td,{children:"Text"}),(0,s.jsx)(a.td,{children:"\u2192"}),(0,s.jsx)(a.td,{children:"Comando SQL a ejecutar"})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{children:"objAsoc"}),(0,s.jsx)(a.td,{children:"Variable, Field"}),(0,s.jsx)(a.td,{children:"\u2194"}),(0,s.jsx)(a.td,{children:"Recibe el resultado (si es necesario)"})]})]})]}),"\n",(0,s.jsx)(a.h4,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,s.jsx)(a.p,{children:"El comando SQL EXECUTE se utiliza para ejecutar un comando SQL y asociar el resultado a objetos 4D (arrays, variables o campos)."}),"\n",(0,s.jsx)(a.p,{children:"Para que el comando pueda ejecutarse, se requiere una conexi\xf3n v\xe1lida en el proceso actual."}),"\n",(0,s.jsxs)(a.p,{children:["El par\xe1metro ",(0,s.jsx)(a.em,{children:"instruccionSQL"})," contiene el comando SQL a ejecutar. ",(0,s.jsx)(a.em,{children:"objAsoc"})," recibe los resultados. Las variables est\xe1n asociadas en el orden de secuencia de la columna, lo que significa que las columnas restantes se ignoren."]}),"\n",(0,s.jsxs)(a.p,{children:["Si los campos 4D se pasan como par\xe1metros en ",(0,s.jsx)(a.em,{children:"objAsoc"}),", el comando crear\xe1 registros y los guardar\xe1 autom\xe1ticamente. Los campos 4D deben venir de la misma tabla (no es posible pasar un campo de la tabla 1 y un campo de la tabla 2 en la misma llamada). Si se pasan campos de diferentes tablas, se genera un error."]}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Atenci\xf3n:"})," cuando pase los campos 4D en los par\xe1metros ",(0,s.jsx)(a.em,{children:"objAsoc"})," y ejecute el comando ",(0,s.jsx)(a.em,{children:"SELECT"}),", siempre son los datos de la fuente 4D remota los que se modifican. Si quiere recuperar datos de una fuente remota localmente, debe utilizar arrays locales intermediarios y llamar al comando ",(0,s.jsx)(a.em,{children:"INSERT"})," (ver el ejemplo 6)."]}),"\n",(0,s.jsxs)(a.p,{children:["Si pasa arrays 4D en el par\xe1metro ",(0,s.jsx)(a.em,{children:"objAsoc"}),", se recomienda declararlos antes de llamar el comando para verificar el tipo de datos procesados. Los arrays se redimensionan autom\xe1ticamente cuando es necesario."]}),"\n",(0,s.jsx)(a.p,{children:"En el caso de una variable 4D, se recupera un s\xf3lo registro a la vez. Los otros resultados se ignoran."}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Nota:"})," para mayor informaci\xf3n sobre el referenciamiento de expresiones 4D en b\xfasquedas SQL, consulte la secci\xf3n ",(0,s.jsx)(a.em,{children:"Presentaci\xf3n de los comandos del tema SQL"}),"."]}),"\n",(0,s.jsx)(a.h4,{id:"ejemplo-1",children:"Ejemplo 1"}),"\n",(0,s.jsx)(a.p,{children:"En este ejemplo, obtendremos la columna ename de la tabla emp de la fuente de datos externos. El resultado se almacena en el campo 4D [Empleados]Nombre. Los registros 4D se crean autom\xe1ticamente:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-4d",children:'\xa0SQLStmt:="SELECT ename FROM emp"\n\xa0SQL EXECUTE(SQLStmt;[Empleados]Nombre)\n\xa0SQL LOAD RECORD(SQL all records)\n'})}),"\n",(0,s.jsx)(a.h4,{id:"ejemplo-2",children:"Ejemplo 2"}),"\n",(0,s.jsx)(a.p,{children:"Para controlar la creaci\xf3n de registros, es posible incluir el c\xf3digo en una transacci\xf3n y validarla \xfanicamente si la operaci\xf3n prueba ser satisfactoria:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-4d",children:'\xa0SQL LOGIN("mysql";"root";"")\n\xa0SQLStmt:="SELECT campo _alfa FROM ap_Tabla_Prueba"\n\xa0START TRANSACTION\n\xa0SQL EXECUTE(SQLStmt;[Tabla 2]Campo1)\n\xa0While(Not(SQL End selection))\n\xa0\xa0\xa0\xa0SQL LOAD RECORD\n\xa0\xa0\xa0\xa0...\xa0//Escribir el c\xf3digo de validaci\xf3n de datos aqu\xed\n\xa0End while\n\xa0VALIDATE TRANSACTION\xa0//Validaci\xf3n de la transacci\xf3n\n'})}),"\n",(0,s.jsx)(a.h4,{id:"ejemplo-3",children:"Ejemplo 3"}),"\n",(0,s.jsxs)(a.p,{children:["En este ejemplo, queremos obtener la columna ename de la tabla emp de la fuente de datos externos. El resultado se almacenar\xe1 en un array ",(0,s.jsx)(a.em,{children:"aNombre"}),". Obtenemos los registros de 10 en 10."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-4d",children:'\xa0ARRAY STRING(30;aNombre;20)\n\xa0SQLStmt:="SELECT ename FROM emp"\n\xa0SQL EXECUTE(SQLStmt;aNombre)\n\xa0While(Not(SQL End selection))\n\xa0\xa0\xa0\xa0SQL LOAD RECORD(10)\n\xa0End while\n'})}),"\n",(0,s.jsx)(a.h4,{id:"ejemplo-4",children:"Ejemplo 4"}),"\n",(0,s.jsxs)(a.p,{children:["En este ejemplo, queremos obtener las columnas ename y job de la tabla emp para un ID especifico ID (cl\xe1usula WHERE) de la fuente de datos externa. El resultado se almacena en las variables 4D ",(0,s.jsx)(a.em,{children:"vNombre"})," y ",(0,s.jsx)(a.em,{children:"vJob"}),". S\xf3lo se recupera el primer registro."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-4d",children:'\xa0SQLStmt:="SELECT ename, job FROM emp WHERE id = 3"\n\xa0SQL EXECUTE(SQLStmt;vNombre;vJob)\n\xa0SQL LOAD RECORD\n'})}),"\n",(0,s.jsx)(a.h4,{id:"ejemplo-5",children:"Ejemplo 5"}),"\n",(0,s.jsx)(a.p,{children:"En este ejemplo, queremos obtener la columna Campo_Blob de la tabla Test en la fuente de datos. El resultado se almacena en una variable BLOB cuyo valor se actualiza cada vez que se carga un registro."}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-4d",children:'\xa0var MiBlob : Blob\n\xa0SQL LOGIN\n\xa0SQL EXECUTE("SELECT Campo_Blob FROM Test";MiBlob)\n\xa0While(Not(SQL End selection))\n\xa0\xa0//Buscamos en los resultados\n\xa0\xa0\xa0\xa0SQL LOAD RECORD\n\xa0\xa0//El valor de MiBlob se actualiza en cada llamada\n'})}),"\n",(0,s.jsx)(a.h4,{id:"ejemplo-6",children:"Ejemplo 6"}),"\n",(0,s.jsx)(a.p,{children:"Usted quiere recuperar localmente los datos almacenados en una base 4D Server remota. Para hacerlo, deber utilizar arrays intermediarios:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-4d",children:'\xa0\xa0// Conexi\xf3n a la base remota\n\xa0SQL LOGIN("IP:192.168.18.15:19812";"user";"password";*)\n\xa0If(OK=1)\n\xa0\xa0// A partir de este punto las peticiones se direccionan a la base remota\n\xa0\xa0\xa0\xa0var $LastName_value : Text\xa0// variable 4D utilizada en la cadena de b\xfasqueda\n\xa0\xa0\xa0\xa0ARRAY TEXT($a_LastName;0)\xa0// Almacenamiento temporal de los valores remotos de LastName\n\xa0\xa0\xa0\xa0ARRAY TEXT($a_FirstName;0)\xa0// Almacenamiento temporal de los valores remotos de FirstName\n\xa0\xa0\xa0\xa0var $UseSQL : Boolean\xa0//Elecci\xf3n del medio de almacenamiento de datos en local de la base remota\n\xa0\xa0// (demo only)\n\xa0\n\xa0\xa0\xa0\xa0$LastName_value:="Smith"\xa0// Inicializaci\xf3n de una variable 4D\n\xa0\n\xa0\xa0// Asociar la variable 4D $LastName_value variable con el primer "?" en la petici\xf3n SQL\n\xa0\xa0\xa0\xa0SQL SET PARAMETER($LastName_value;SQL param in)\n\xa0\n\xa0\xa0// De la tabla remota PERSONS, recuperar los valores de los campos LastName y FirstName\n\xa0\xa0// donde "LastName = Smith" y almacenarlos en los arrays $a_LastName y $a_FirstName\n\xa0\xa0\xa0\xa0SQL EXECUTE("SELECT LastName, FirstName FROM PERSONS WHERE LastName = ?";$a_LastName;$a_FirstName)\n\xa0\xa0\xa0\xa0If(Not(SQL End selection))\xa0// Si al menos se encuentra un registro\n\xa0\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0SQL LOAD RECORD(SQL all records)\xa0// Cargar todos los registros\n\xa0\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0$UseSQL:=True\xa0// Elija la forma de integrar los datos (demo \xfanicamente)\n\xa0\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0If($UseSQL)\xa0// Uso de las peticiones SQL\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0SQL LOGOUT\xa0// Desconexi\xf3n de la base remota\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0SQL LOGIN(SQL_INTERNAL;"user";"password")\xa0// Conexi\xf3n a la base local\n\xa0\xa0// A partir de este punto las peticiones SQL se direccionan a la base local\xa0\n\xa0\xa0// Guarde los arrays $a_LastName y $a_FirstName en la tabla local PERSONS\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0SQL EXECUTE("INSERT INTO PERSONS(LastName, FirstName) VALUES (:$a_LastName, :$a_FirstName);")\n\xa0\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0Else\xa0// Uso de comandos 4D\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0For($i;1;Size of array($a_LastName))\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0CREATE RECORD([PERSONS])\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0[PERSONS]LastName:=$a_LastName{$i}\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0[PERSONS]FirstName:=$a_FirstName{$i}\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0SAVE RECORD([PERSONS])\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0End for\n\xa0\xa0\xa0\xa0\xa0\xa0\xa0End if\n\xa0\xa0\xa0\xa0End if\n\xa0\xa0\xa0\xa0SQL LOGOUT\xa0// Cierre de la conexi\xf3n\n\xa0End if\n'})}),"\n",(0,s.jsx)(a.h4,{id:"variables-y-conjuntos-del-sistema",children:"Variables y conjuntos del sistema"}),"\n",(0,s.jsx)(a.p,{children:"Si el comando se ejecuta correctamente, la variable sistema OK devuelve 1, de lo contrario devuelve 0."}),"\n",(0,s.jsx)(a.h4,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"/docs/es/next/commands/sql-load-record",children:"SQL LOAD RECORD"})})]})}function m(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,a,n)=>{n.d(a,{R:()=>r,x:()=>t});var s=n(296540);const l={},o=s.createContext(l);function r(e){const a=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function t(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(o.Provider,{value:a},e.children)}}}]);