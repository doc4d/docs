"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[41847],{603905:(e,o,n)=>{n.d(o,{Zo:()=>p,kt:()=>m});var t=n(667294);function a(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function r(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?r(Object(n),!0).forEach((function(o){a(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function c(e,o){if(null==e)return{};var n,t,a=function(e,o){if(null==e)return{};var n,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],o.indexOf(n)>=0||(a[n]=e[n]);return a}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=t.createContext({}),l=function(e){var o=t.useContext(i),n=o;return e&&(n="function"==typeof e?e(o):s(s({},o),e)),n},p=function(e){var o=l(e.components);return t.createElement(i.Provider,{value:o},e.children)},d={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},u=t.forwardRef((function(e,o){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,b=u["".concat(i,".").concat(m)]||u[m]||d[m]||r;return n?t.createElement(b,s(s({ref:o},p),{},{components:n})):t.createElement(b,s({ref:o},p))}));function m(e,o){var n=arguments,a=o&&o.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=u;var c={};for(var i in o)hasOwnProperty.call(o,i)&&(c[i]=o[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var l=2;l<r;l++)s[l]=n[l];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},487634:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});n(667294);var t=n(603905);function a(){return a=Object.assign||function(e){for(var o=1;o<arguments.length;o++){var n=arguments[o];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},a.apply(this,arguments)}function r(e,o){if(null==e)return{};var n,t,a=function(e,o){if(null==e)return{};var n,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],o.indexOf(n)>=0||(a[n]=e[n]);return a}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const s={id:"shared",title:"Objetos y colecciones compartidos"},c=void 0,i={unversionedId:"Concepts/shared",id:"Concepts/shared",title:"Objetos y colecciones compartidos",description:"Los objetos compartidos y las colecciones compartidas son objetos y colecciones espec\xedficas cuyo contenido se comparte entre procesos. In contrast to interprocess variables, shared objects and shared collections have the advantage of being compatible with preemptive 4D processes: they can be passed by reference as parameters to commands such as New process or CALL WORKER.",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/Concepts/shared.md",sourceDirName:"Concepts",slug:"/Concepts/shared",permalink:"/docs/es/next/Concepts/shared",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fshared.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"shared",title:"Objetos y colecciones compartidos"},sidebar:"docs",previous:{title:"Par\xe1metros",permalink:"/docs/es/next/Concepts/parameters"},next:{title:"Clases",permalink:"/docs/es/next/Concepts/classes"}},l={},p=[{value:"Utilizaci\xf3n de objetos o colecciones compartidos",id:"utilizaci\xf3n-de-objetos-o-colecciones-compartidos",level:2},{value:"Modificaci\xf3n",id:"modificaci\xf3n",level:3},{value:"Lectura",id:"lectura",level:3},{value:"Duplication",id:"duplication",level:3},{value:"Storage",id:"storage",level:3},{value:"Use...End use",id:"useend-use",level:2},{value:"Ejemplo 1",id:"ejemplo-1",level:2},{value:"Ejemplo 2",id:"ejemplo-2",level:2}],d={toc:p};function u(e){var{components:o}=e,n=r(e,["components"]);return(0,t.kt)("wrapper",a({},d,n,{components:o,mdxType:"MDXLayout"}),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Los objetos compartidos")," y ",(0,t.kt)("strong",{parentName:"p"},"las colecciones compartidas")," son ",(0,t.kt)("a",a({parentName:"p"},{href:"/docs/es/next/Concepts/object"}),"objetos")," y ",(0,t.kt)("a",a({parentName:"p"},{href:"/docs/es/next/Concepts/collection"}),"colecciones")," espec\xedficas cuyo contenido se comparte entre procesos. In contrast to ",(0,t.kt)("a",a({parentName:"p"},{href:"/docs/es/next/Concepts/variables#interprocess-variables"}),"interprocess variables"),", shared objects and shared collections have the advantage of being compatible with ",(0,t.kt)("strong",{parentName:"p"},"preemptive 4D processes"),": they can be passed by reference as parameters to commands such as ",(0,t.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page317.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"New process"))," or ",(0,t.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1389.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"CALL WORKER")),"."),(0,t.kt)("p",null,"Shared objects and shared collections are stored in standard ",(0,t.kt)("a",a({parentName:"p"},{href:"/docs/es/next/Concepts/object"}),(0,t.kt)("inlineCode",{parentName:"a"},"Object"))," and ",(0,t.kt)("a",a({parentName:"p"},{href:"/docs/es/next/Concepts/collection"}),(0,t.kt)("inlineCode",{parentName:"a"},"Collection"))," type variables, but must be instantiated using specific commands:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"to create a shared object, use the ",(0,t.kt)("a",a({parentName:"li"},{href:"https://doc.4d.com/4dv20/help/command/en/page1471.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"New shared object"))," command or call the ",(0,t.kt)("a",a({parentName:"li"},{href:"/docs/es/next/API/ClassClass#new"}),(0,t.kt)("inlineCode",{parentName:"a"},"new()"))," function of a ",(0,t.kt)("a",a({parentName:"li"},{href:"/docs/es/next/Concepts/classes#shared-classes"}),"shared class"),","),(0,t.kt)("li",{parentName:"ul"},"to create a shared collection, use the ",(0,t.kt)("a",a({parentName:"li"},{href:"/docs/es/next/API/CollectionClass#new-shared-collection"}),(0,t.kt)("inlineCode",{parentName:"a"},"New shared collection"))," command.")),(0,t.kt)("admonition",a({},{type:"note"}),(0,t.kt)("p",{parentName:"admonition"},"Los objetos y colecciones compartidos pueden definirse como propiedades de objetos o colecciones est\xe1ndar (no compartidos).")),(0,t.kt)("p",null,"Para modificar un objeto/colecci\xf3n compartido, se debe llamar a la estructura ",(0,t.kt)("strong",{parentName:"p"},"Use...End use"),". La lectura de un valor de objeto/colecci\xf3n compartido no requiere ",(0,t.kt)("strong",{parentName:"p"},"Use...End use"),"."),(0,t.kt)("p",null,"A unique, global catalog returned by the ",(0,t.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1525.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"Storage"))," command is always available throughout the application and its components, and can be used to store all shared objects and collections."),(0,t.kt)("h2",a({},{id:"utilizaci\xf3n-de-objetos-o-colecciones-compartidos"}),"Utilizaci\xf3n de objetos o colecciones compartidos"),(0,t.kt)("p",null,"Una vez instanciado con los comandos ",(0,t.kt)("inlineCode",{parentName:"p"},"Nuevo objeto compartido")," o ",(0,t.kt)("inlineCode",{parentName:"p"},"Nueva colecci\xf3n compartida"),", las propiedades y elementos del objeto compartido/colecci\xf3n pueden ser modificados o le\xeddos desde cualquier proceso de la aplicaci\xf3n, bajo ciertas condiciones."),(0,t.kt)("h3",a({},{id:"modificaci\xf3n"}),"Modificaci\xf3n"),(0,t.kt)("p",null,"Las siguientes modificaciones pueden efectuarse en objetos y colecciones compartidos:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"a\xf1adir o eliminar propiedades de los objetos,"),(0,t.kt)("li",{parentName:"ul"},"a\xf1adir o editar valores (siempre que se soporten en objetos compartidos), incluyendo otros objetos compartidos o colecciones (lo que crea un grupo compartido, ver abajo).")),(0,t.kt)("p",null,"All modification instructions in a shared object or collection require to be protected inside a ",(0,t.kt)("a",a({parentName:"p"},{href:"#use-end-use"}),(0,t.kt)("inlineCode",{parentName:"a"},"Use...End use"))," block, otherwise an error is generated."),(0,t.kt)("pre",null,(0,t.kt)("code",a({parentName:"pre"},{className:"language-4d"}),' $s_obj:=New shared object("prop1";"alpha")\n Use($s_obj)\n    $s_obj.prop1:="omega"\n End Use\n')),(0,t.kt)("p",null,"Por comodidad, todas las ",(0,t.kt)("a",a({parentName:"p"},{href:"/docs/es/next/API/CollectionClass"}),"funciones colecci\xf3n")," que modifican el objeto compartido o la colecci\xf3n insertan un bloque interno ",(0,t.kt)("inlineCode",{parentName:"p"},"Use...End use")," para que no tenga que codificarlo usted mismo. Por ejemplo:"),(0,t.kt)("pre",null,(0,t.kt)("code",a({parentName:"pre"},{className:"language-4d"}),'$col:=Nueva colecci\xf3n compartida()\n$col.push("alpha") //.push() desencadena internamente el uso de Use/End, por lo que no es necesario que lo hagan ustedes mismos\n')),(0,t.kt)("p",null,"Si necesita ejecutar varias modificaciones en la misma colecci\xf3n, puede proteger todas las modificaciones con un \xfanico ",(0,t.kt)("inlineCode",{parentName:"p"},"Use...End use")," para que las modificaciones se realicen de forma at\xf3mica."),(0,t.kt)("pre",null,(0,t.kt)("code",a({parentName:"pre"},{className:"language-4d"}),'$col:=Storage.mySharedCollection\nUse($col)\n    $col[0]:="omega" //modifying an element requires to be performed inside Use/End use\n    $col.push("alpha") //.push() internally triggers Use/End use, but we want to do both modifications atomically\nEnd Use\n')),(0,t.kt)("p",null,"Un objeto/una colecci\xf3n compartido(a) s\xf3lo puede modificarse por un proceso a la vez. Un objeto/una colecci\xf3n compartido(a) s\xf3lo puede modificarse por un proceso a la vez. . Intentar modificar un objeto/colecci\xf3n compartido sin al menos un ",(0,t.kt)("inlineCode",{parentName:"p"},"Use...End use")," genera un error. Cuando un proceso llama a ",(0,t.kt)("inlineCode",{parentName:"p"},"Use...End use")," en un objeto/colecci\xf3n compartido que ya est\xe1 en uso por otro proceso, simplemente se pone en espera hasta que el ",(0,t.kt)("inlineCode",{parentName:"p"},"End use")," lo desbloquee (no se genera ning\xfan error). En consecuencia, las instrucciones dentro de las estructuras ",(0,t.kt)("inlineCode",{parentName:"p"},"Use...End use")," deben ejecutarse r\xe1pidamente y desbloquear los elementos lo antes posible. Por lo tanto, se recomienda enf\xe1ticamente evitar modificar un objeto o colecci\xf3n compartido directamente desde la interfaz, por ejemplo, a trav\xe9s de una caja de di\xe1logo."),(0,t.kt)("p",null,"La asignaci\xf3n de objetos/colecciones compartidos a propiedades o elementos de otros objetos/colecciones compartidos est\xe1 permitida y crea ",(0,t.kt)("strong",{parentName:"p"},"grupos compartidos"),". Un grupo compartido se crea autom\xe1ticamente cuando un objeto/colecci\xf3n compartido se define como valor de propiedad o elemento de otro objeto/colecci\xf3n compartido. Los grupos compartidos permiten anidar objetos y colecciones compartidos, pero imponen reglas adicionales:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Al llamar a ",(0,t.kt)("inlineCode",{parentName:"li"},"Use")," en un objeto/colecci\xf3n compartido que pertenece a un grupo se bloquean las propiedades/elementos de todos los objetos/colecciones del grupo y se incrementa su conteo de bloqueo. La llamada a ",(0,t.kt)("inlineCode",{parentName:"li"},"End use")," disminuye el contador de bloqueo del grupo y cuando el contador est\xe1 a 0, todos los objetos/colecciones compartidos vinculados se desbloquean."),(0,t.kt)("li",{parentName:"ul"},"Un objeto/colecci\xf3n compartido s\xf3lo puede pertenecer a un grupo compartido. Se devuelve un error si se intenta asignar un objeto/colecci\xf3n compartido ya agrupado a un grupo diferente."),(0,t.kt)("li",{parentName:"ul"},"Los objetos/colecciones compartidos agrupados no se pueden desagrupar. Una vez incluido en un grupo compartido, un objeto/colecci\xf3n compartido queda vinculado permanentemente a ese grupo durante toda la sesi\xf3n. Incluso si todas las referencias de un objeto/colecci\xf3n se eliminan del objeto/colecci\xf3n padre, seguir\xe1n vinculadas.")),(0,t.kt)("p",null,"Consulte el ejemplo 2 para ver una ilustraci\xf3n de las reglas de los grupos compartidos."),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Nota:")," Los grupos compartidos se gestionan a trav\xe9s de una propiedad interna llamada ",(0,t.kt)("em",{parentName:"p"},"locking identifier"),". Para obtener informaci\xf3n detallada sobre este valor, consulte la Referencia del Lenguaje 4D."),(0,t.kt)("h3",a({},{id:"lectura"}),"Lectura"),(0,t.kt)("p",null,"Se permite la lectura de propiedades o elementos de un objeto/colecci\xf3n compartida sin tener que llamar a la estructura ",(0,t.kt)("inlineCode",{parentName:"p"},"Use...End use"),", incluso si el objeto/colecci\xf3n compartida est\xe1 en uso por otro proceso."),(0,t.kt)("p",null,"Sin embargo, cuando varios valores son interdependientes y deben ser le\xeddos simult\xe1neamente, es necesario enmarcar el acceso de lectura con una estructura ",(0,t.kt)("inlineCode",{parentName:"p"},"Use...End use")," por coherencia."),(0,t.kt)("h3",a({},{id:"duplication"}),"Duplication"),(0,t.kt)("p",null,"Llamar a ",(0,t.kt)("inlineCode",{parentName:"p"},"OB Copy")," con un objeto compartido (o con un objeto cuyas propiedades son objetos compartidos) es posible, pero en este caso se devuelve un objeto est\xe1ndar (no compartido)."),(0,t.kt)("h3",a({},{id:"storage"}),"Storage"),(0,t.kt)("p",null,(0,t.kt)("strong",{parentName:"p"},"Storage")," es un objeto compartido \xfanico, disponible autom\xe1ticamente en cada aplicaci\xf3n y m\xe1quina. This shared object is returned by the ",(0,t.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1525.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"Storage"))," command. Puede utilizar este objeto para hacer referencia a todos los objetos/colecciones compartidos definidos durante la sesi\xf3n que desee que est\xe9n disponibles desde cualquier proceso preventivo o est\xe1ndar."),(0,t.kt)("p",null,"Tenga en cuenta que, a diferencia de los objetos compartidos est\xe1ndar, el objeto ",(0,t.kt)("inlineCode",{parentName:"p"},"Storage")," no crea un grupo compartido cuando se a\xf1aden objetos/colecciones compartidos como sus propiedades. Esta excepci\xf3n permite utilizar el objeto ",(0,t.kt)("strong",{parentName:"p"},"Storage")," sin bloquear todos los objetos o colecciones compartidos conectados."),(0,t.kt)("p",null,"For more information, refer to the ",(0,t.kt)("a",a({parentName:"p"},{href:"https://doc.4d.com/4dv20/help/command/en/page1525.html"}),(0,t.kt)("inlineCode",{parentName:"a"},"Storage"))," command description."),(0,t.kt)("h2",a({},{id:"useend-use"}),"Use...End use"),(0,t.kt)("p",null,"La sintaxis de la estructura ",(0,t.kt)("inlineCode",{parentName:"p"},"Use...End use")," es:"),(0,t.kt)("pre",null,(0,t.kt)("code",a({parentName:"pre"},{className:"language-4d"})," Use(Shared_object_or_Shared_collection)\n    instrucci\xf3n(es)\n End use\n")),(0,t.kt)("p",null,"La estructura ",(0,t.kt)("inlineCode",{parentName:"p"},"Use...End use")," define una secuencia de instrucciones que ejecutar\xe1n tareas sobre el par\xe1metro ",(0,t.kt)("em",{parentName:"p"},"Shared_object_or_Shared_collection")," bajo la protecci\xf3n de un sem\xe1foro interno. ",(0,t.kt)("em",{parentName:"p"},"Shared_object_or_Shared_collection")," puede ser cualquier objeto o colecci\xf3n compartido v\xe1lido."),(0,t.kt)("p",null,"Los objetos compartidos y las colecciones compartidas est\xe1n dise\xf1ados para permitir la comunicaci\xf3n entre procesos, en particular, ",(0,t.kt)("strong",{parentName:"p"},"procesos 4D preferentes"),". Se pueden pasar por referencia como par\xe1metros de un proceso a otro. Es obligatorio rodear las modificaciones en los objetos o colecciones compartidas con las palabras clave ",(0,t.kt)("inlineCode",{parentName:"p"},"Use...End use")," para evitar el acceso concurrente entre procesos."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Once the ",(0,t.kt)("strong",{parentName:"li"},"Use")," line is successfully executed, all ",(0,t.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties/elements are locked for all other process in write access until the corresponding ",(0,t.kt)("inlineCode",{parentName:"li"},"End use")," line is executed."),(0,t.kt)("li",{parentName:"ul"},"The ",(0,t.kt)("em",{parentName:"li"},"statement(s)")," sequence can execute any modification on the Shared_object_or_Shared_collection properties/elements without risk of concurrent access."),(0,t.kt)("li",{parentName:"ul"},"If another shared object or collection is added as a property of the ",(0,t.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," parameter, they become connected within the same shared group."),(0,t.kt)("li",{parentName:"ul"},"If another process tries to access one of the ",(0,t.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties or connected properties while a ",(0,t.kt)("strong",{parentName:"li"},"Use...End use")," sequence is being executed, it is automatically put on hold and waits until the current sequence is terminated."),(0,t.kt)("li",{parentName:"ul"},"The ",(0,t.kt)("strong",{parentName:"li"},"End use")," line unlocks the ",(0,t.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties and all objects of the same group."),(0,t.kt)("li",{parentName:"ul"},"En el c\xf3digo 4D se pueden anidar varias estructuras ",(0,t.kt)("strong",{parentName:"li"},"Use...End use"),". Para modificar un objeto/colecci\xf3n compartido, se debe llamar a la estructura ",(0,t.kt)("strong",{parentName:"li"},"Use...End use"),".")),(0,t.kt)("admonition",a({},{type:"note"}),(0,t.kt)("p",{parentName:"admonition"},"Las siguientes funciones activan autom\xe1ticamente un ",(0,t.kt)("strong",{parentName:"p"},"Use/End use")," interno, haciendo innecesaria una llamada expl\xedcita a la estructura cuando se ejecuta la funci\xf3n:"),(0,t.kt)("ul",{parentName:"admonition"},(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",a({parentName:"li"},{href:"/docs/es/next/API/CollectionClass"}),"collection functions")," that modify shared collections"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",a({parentName:"li"},{href:"/docs/es/next/Concepts/classes#shared-functions"}),"funciones compartidas")," (definidas en ",(0,t.kt)("a",a({parentName:"li"},{href:"/docs/es/next/Concepts/classes#shared-classes"}),"clases compartidas"),")."))),(0,t.kt)("h2",a({},{id:"ejemplo-1"}),"Ejemplo 1"),(0,t.kt)("p",null,"Se desea lanzar varios procesos que realicen una tarea de inventario en diferentes productos y que actualicen el mismo objeto compartido. El proceso principal instancia un objeto compartido vac\xedo y luego, lanza los otros procesos, pasando el objeto compartido y los productos a contar como par\xe1metros:"),(0,t.kt)("pre",null,(0,t.kt)("code",a({parentName:"pre"},{className:"language-4d"}),' ARRAY TEXT($_items;0)\n ... //llenar el array con los elementos a contar\n $nbItems:=Size of array($_items)\n var $inventory : Object\n $inventory:=New shared object\n Use($inventory)\n    $inventory.nbItems:=$nbItems\n End use\n\n  //Crear procesos\n For($i;1;$nbItems)\n    $ps:=New process("HowMany";0;"HowMany_"+$_items{$i};$_items{$i};$inventory)\n  //$inventory object sent by reference\n End for\n')),(0,t.kt)("p",null,'En el m\xe9todo "HowMany", el inventario se realiza y el objeto compartido $inventory se actualiza lo antes posible:'),(0,t.kt)("pre",null,(0,t.kt)("code",a({parentName:"pre"},{className:"language-4d"}),"    //HowMany\n #DECLARE ($what : Text ; $inventory : Object)\n\n $count:=CountMethod($what) //method to count products\n Use($inventory) //use shared object\n    $inventory[$what]:=$count  //save the results for this item\n End use\n")),(0,t.kt)("h2",a({},{id:"ejemplo-2"}),"Ejemplo 2"),(0,t.kt)("p",null,"Los siguientes ejemplos ilustran las reglas espec\xedficas para el manejo de los grupos compartidos:"),(0,t.kt)("pre",null,(0,t.kt)("code",a({parentName:"pre"},{className:"language-4d"})," $ob1:=New shared object\n $ob2:=New shared object\n Use($ob1)\n    $ob1.a:=$ob2  //group 1 is created\n End use\n\n $ob3:=New shared object\n $ob4:=New shared object\n Use($ob3)\n    $ob3.a:=$ob4  //group 2 is created\n End use\n\n Use($ob1) //use an object from group 1\n    $ob1.b:=$ob4  //ERROR\n  //$ob4 already belongs to another group\n  //assignment is not allowed\n End use\n\n Use($ob3)\n    $ob3.a:=Null //remove any reference to $ob4 from group 2\n End use\n\n Use($ob1) //use an object from group 1\n    $ob1.b:=$ob4  //ERROR\n  //$ob4 still belongs to group 2\n  //assignment is not allowed\n End use\n")))}u.isMDXComponent=!0}}]);