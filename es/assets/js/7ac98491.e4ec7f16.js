"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[22837],{747611:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>d,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>i});var s=n(474848),a=n(28453);const o={id:"form-get-names",title:"FORM GET NAMES",slug:"/commands/form-get-names",displayed_sidebar:"docs"},d=void 0,l={id:"commands-legacy/form-get-names",title:"FORM GET NAMES",description:"FORM GET NAMES ( {tabla ;} arrayNoms {; filtro {; marcador}}{; *} )",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/commands-legacy/form-get-names.md",sourceDirName:"commands-legacy",slug:"/commands/form-get-names",permalink:"/docs/es/next/commands/form-get-names",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands-legacy%2Fform-get-names.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"form-get-names",title:"FORM GET NAMES",slug:"/commands/form-get-names",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"FORM EDIT",permalink:"/docs/es/next/commands/form-edit"},next:{title:"METHOD Get attribute",permalink:"/docs/es/next/commands/method-get-attribute"}},t={},i=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:4},{value:"Ejemplo",id:"ejemplo",level:4},{value:"Ver tambi\xe9n",id:"ver-tambi\xe9n",level:4}];function c(e){const r={a:"a",br:"br",code:"code",em:"em",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"FORM GET NAMES"})," ( {",(0,s.jsx)(r.em,{children:"tabla"})," ;} ",(0,s.jsx)(r.em,{children:"arrayNoms"})," {; ",(0,s.jsx)(r.em,{children:"filtro"})," {; ",(0,s.jsx)(r.em,{children:"marcador"}),"}}{; *} )"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Par\xe1metro"}),(0,s.jsx)(r.th,{children:"Tipo"}),(0,s.jsx)(r.th,{}),(0,s.jsx)(r.th,{children:"Descripci\xf3n"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"tabla"}),(0,s.jsx)(r.td,{children:"Tabla"}),(0,s.jsx)(r.td,{children:"\ud83e\udc52"}),(0,s.jsx)(r.td,{children:"Referencia de tabla"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"arrayNoms"}),(0,s.jsx)(r.td,{children:"Array texto"}),(0,s.jsx)(r.td,{children:"\ud83e\udc58"}),(0,s.jsx)(r.td,{children:"Array de nombres de formulario"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"filtro"}),(0,s.jsx)(r.td,{children:"Texto"}),(0,s.jsx)(r.td,{children:"\ud83e\udc52"}),(0,s.jsx)(r.td,{children:"Filtro de nombres"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"marcador"}),(0,s.jsx)(r.td,{children:"Real variable"}),(0,s.jsx)(r.td,{children:"\ud83e\udc52"}),(0,s.jsx)(r.td,{children:"Marcador para versi\xf3n m\xednima a devolver"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"\ud83e\udc58"}),(0,s.jsx)(r.td,{children:"Nuevo valor"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"*"}),(0,s.jsx)(r.td,{children:"Operador"}),(0,s.jsx)(r.td,{children:"\ud83e\udc52"}),(0,s.jsx)(r.td,{children:"Si se pasa = el comando se aplica a la base local cuando se ejecuta desde un componente (par\xe1metro ignorado fuera de este contexto)"})]})]})]}),"\n",(0,s.jsx)(r.h4,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,s.jsxs)(r.p,{children:["El comando ",(0,s.jsx)(r.strong,{children:"FORM GET NAMES"})," llena el array ",(0,s.jsx)(r.em,{children:"arrayNoms"})," con los nombres de los formularios de la aplicaci\xf3n."]}),"\n",(0,s.jsxs)(r.p,{children:["Si pasa el par\xe1metro ",(0,s.jsx)(r.em,{children:"tabla"}),", el comando devuelve los nombres de los formularios tabla asociados a esta tabla. Si omite este par\xe1metro, el comando devuelve los nombres de los formularios proyecto de la base."]}),"\n",(0,s.jsxs)(r.p,{children:["Puede limitar esta lista de formularios pasando una cadena de comparaci\xf3n en el par\xe1metro ",(0,s.jsx)(r.em,{children:"filtro"}),': en este caso, s\xf3lo se devuelven los formularios cuyos nombres corresponden al filtro. Puede utilizar el car\xe1cter @ para definir los filtros de tipo "comienza por", "termina en" o "contiene". Si pasa una cadena vac\xeda, se ignora el par\xe1metro ',(0,s.jsx)(r.em,{children:"filtro"}),"."]}),"\n",(0,s.jsxs)(r.p,{children:["Tambi\xe9n puede limitar la lista de formularios utilizando el par\xe1metro opcional ",(0,s.jsx)(r.em,{children:"marcador"}),", que permite limitar los formularios devueltos en ",(0,s.jsx)(r.em,{children:"arrayNoms"})," a los que fueron modificados despu\xe9s de un tiempo determinado. Como parte de un sistema de control de versiones, este par\xe1metro le permite actualizar s\xf3lo los formularios que se fueron modificados desde la \xfaltima copia de seguridad."]}),"\n",(0,s.jsxs)(r.p,{children:["Este principio funciona de esta forma: 4D mantiene un contador interno de las modificaciones de los recursos de la base. Como los formularios son recursos, cada vez que un formulario se crea o se guarda, el contador se incrementa.",(0,s.jsx)(r.br,{}),"\nSi pasa el par\xe1metro ",(0,s.jsx)(r.em,{children:"marcador"}),", el comando devuelve, en ",(0,s.jsx)(r.em,{children:"arrayNoms"}),", s\xf3lo los formularios que corresponden a los valores de los marcadores superiores o iguales a ",(0,s.jsx)(r.em,{children:"marcador"}),". Adem\xe1s, si pasa una variable en el marcador, el comando devuelve el nuevo valor del contador de modificaci\xf3n, es decir, el m\xe1s alto, en esta variable. Puede guardar este valor y utilizarlo en la pr\xf3xima llamada al comando ",(0,s.jsx)(r.strong,{children:"FORM GET NAMES"})," para recuperar s\xf3lo los formularios nuevos o modificados."]}),"\n",(0,s.jsxs)(r.p,{children:["Si el comando se ejecuta desde un componente, devuelve por defecto los nombres de los formularios proyecto del componente. Si pasa el par\xe1metro ",(0,s.jsx)(r.em,{children:"*"}),", el array contendr\xe1 los formularios de la base local."]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Nota:"})," los formularios ubicados en la papelera no se listan."]}),"\n",(0,s.jsx)(r.h4,{id:"ejemplo",children:"Ejemplo"}),"\n",(0,s.jsx)(r.p,{children:"Ejemplos de uso t\xedpicos:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-4d",children:'\xa0\xa0// Lista de todos los formularios proyecto de la base\n\xa0FORM GET NAMES(arr_Names)\n\xa0\n\xa0\xa0// Lista de formularios de la tabla [Empleados]\n\xa0FORM GET NAMES([Empleados] ;arr_Names)\n\xa0\n\xa0\xa0// Lista de formularios "input" de la tabla [Empleados]\n\xa0FORM GET NAMES([Empleados] ;arr_Names;"input_@")\n\xa0\n\xa0\xa0// Lista de formularios proyecto especificos de la base\n\xa0FORM GET NAMES(arr_Names;"dialogue_@")\n\n\xa0// Lista todos los formularios proyecto que fueron modificados desde la \xfaltima sincronizaci\xf3n\n\xa0\xa0// vMarker contiene un valor num\xe9rico\n\xa0FORM GET NAMES(arr_Names;"";vMarker)\n\xa0\n\xa0\xa0// Lista de formularios tabla desde un componente\n\xa0\xa0// Un puntero es necesario porque se desconoce el nombre de la tabla\n\xa0FORM GET NAMES(tablePtr->;arr_Names;*)\n\n\n'})}),"\n",(0,s.jsx)(r.h4,{id:"ver-tambi\xe9n",children:"Ver tambi\xe9n"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.em,{children:"Formularios"}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.a,{href:"/docs/es/next/commands/method-get-paths-form",children:"METHOD GET PATHS FORM"})]})]})}function m(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>l});var s=n(296540);const a={},o=s.createContext(a);function d(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);