"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[47211],{3905:(e,o,t)=>{t.d(o,{Zo:()=>d,kt:()=>m});var a=t(67294);function n(e,o,t){return o in e?Object.defineProperty(e,o,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[o]=t,e}function r(e,o){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);o&&(a=a.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var o=1;o<arguments.length;o++){var t=null!=arguments[o]?arguments[o]:{};o%2?r(Object(t),!0).forEach((function(o){n(e,o,t[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(t,o))}))}return e}function i(e,o){if(null==e)return{};var t,a,n=function(e,o){if(null==e)return{};var t,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],o.indexOf(t)>=0||(n[t]=e[t]);return n}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=a.createContext({}),c=function(e){var o=a.useContext(l),t=o;return e&&(t="function"==typeof e?e(o):s(s({},o),e)),t},d=function(e){var o=c(e.components);return a.createElement(l.Provider,{value:o},e.children)},p={inlineCode:"code",wrapper:function(e){var o=e.children;return a.createElement(a.Fragment,{},o)}},u=a.forwardRef((function(e,o){var t=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=n,h=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return t?a.createElement(h,s(s({ref:o},d),{},{components:t})):a.createElement(h,s({ref:o},d))}));function m(e,o){var t=arguments,n=o&&o.mdxType;if("string"==typeof e||n){var r=t.length,s=new Array(r);s[0]=u;var i={};for(var l in o)hasOwnProperty.call(o,l)&&(i[l]=o[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<r;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},83597:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>d});t(67294);var a=t(3905);function n(){return n=Object.assign||function(e){for(var o=1;o<arguments.length;o++){var t=arguments[o];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},n.apply(this,arguments)}function r(e,o){if(null==e)return{};var t,a,n=function(e,o){if(null==e)return{};var t,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],o.indexOf(t)>=0||(n[t]=e[t]);return n}(e,o);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],o.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}const s={id:"shared",title:"Objetos e cole\xe7\xf5es compartilhados"},i=void 0,l={unversionedId:"Concepts/shared",id:"version-19/Concepts/shared",title:"Objetos e cole\xe7\xf5es compartilhados",description:"Os objectos partilhados e as cole\xe7\xf5es partilhadas  s\xe3o objectos espec\xedficos  e cole\xe7\xf5es  cujos conte\xfados s\xe3o partilhados entre processos. Ao contr\xe1rio das vari\xe1veis interprocessos, os objetos partilhados e as cole\xe7\xf5es partilhadas t\xeam a vantagem de serem compat\xedveis com processos 4D preemptivos: podem ser passados por refer\xeancia como par\xe2metros de comandos como New process ou CALL WORKER.",source:"@site/i18n/pt/docusaurus-plugin-content-docs/version-19/Concepts/shared.md",sourceDirName:"Concepts",slug:"/Concepts/shared",permalink:"/docs/pt/19/Concepts/shared",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Concepts%2Fshared.md%20(19)&body=Please%20enter%20your%20comment%3A",tags:[],version:"19",frontMatter:{id:"shared",title:"Objetos e cole\xe7\xf5es compartilhados"},sidebar:"docs",previous:{title:"Par\xe2metros",permalink:"/docs/pt/19/Concepts/parameters"},next:{title:"Classes",permalink:"/docs/pt/19/Concepts/classes"}},c={},d=[{value:"Utiliza\xe7\xe3o de objetos ou cole\xe7\xf5es compartidos",id:"utiliza\xe7\xe3o-de-objetos-ou-cole\xe7\xf5es-compartidos",level:2},{value:"Modifica\xe7\xe3o",id:"modifica\xe7\xe3o",level:3},{value:"Leitura",id:"leitura",level:3},{value:"Duplica\xe7\xe3o",id:"duplica\xe7\xe3o",level:3},{value:"Storage",id:"storage",level:3},{value:"Use... End use",id:"use-end-use",level:2},{value:"Exemplo 1",id:"exemplo-1",level:2},{value:"Exemplo 2",id:"exemplo-2",level:2}],p={toc:d};function u(e){var{components:o}=e,t=r(e,["components"]);return(0,a.kt)("wrapper",n({},p,t,{components:o,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Os objectos partilhados")," e as cole\xe7\xf5es partilhadas *",(0,a.kt)("strong",{parentName:"p"},"* s\xe3o objectos espec\xedficos ",(0,a.kt)("a",n({parentName:"strong"},{href:"/docs/pt/19/Concepts/object"}))," e cole\xe7\xf5es ",(0,a.kt)("a",n({parentName:"strong"},{href:"/docs/pt/19/Concepts/collection"}))," cujos conte\xfados s\xe3o partilhados entre processos. Ao contr\xe1rio das ",(0,a.kt)("a",n({parentName:"strong"},{href:"/docs/pt/19/Concepts/variables#interprocess-variables"}),"vari\xe1veis interprocessos"),", os objetos partilhados e as cole\xe7\xf5es partilhadas t\xeam a vantagem de serem compat\xedveis com "),"processos 4D preemptivos**: podem ser passados por refer\xeancia como par\xe2metros de comandos como ",(0,a.kt)("inlineCode",{parentName:"p"},"New process")," ou ",(0,a.kt)("inlineCode",{parentName:"p"},"CALL WORKER"),"."),(0,a.kt)("p",null,"Os objetos partilhados e as cole\xe7\xf5es partilhadas podem ser armazenados em vari\xe1veis de tipo normalizadas ",(0,a.kt)("inlineCode",{parentName:"p"},"Object")," e ",(0,a.kt)("inlineCode",{parentName:"p"},"Collection")," , mas t\xeam de ser instanciados utilizando comandos espec\xedficos:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Para criar um objeto partilhado, utilize o comando ",(0,a.kt)("a",n({parentName:"li"},{href:"https://doc.4d.com/4dv19R/help/command/en/page1471.html"}),(0,a.kt)("inlineCode",{parentName:"a"},"New shared object"))," ,"),(0,a.kt)("li",{parentName:"ul"},"Para criar uma cole\xe7\xe3o partilhada, utilize o comando ",(0,a.kt)("a",n({parentName:"li"},{href:"/docs/pt/19/API/CollectionClass#new-shared-collection"}),(0,a.kt)("inlineCode",{parentName:"a"},"New shared collection"))," .")),(0,a.kt)("admonition",n({},{type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"Os objectos e cole\xe7\xf5es partilhados podem ser definidos como propriedades de objetos ou cole\xe7\xf5es padr\xe3o (n\xe3o partilhados).")),(0,a.kt)("p",null,"Para modificar um objeto/cole\xe7\xe3o partilhado, \xe9 necess\xe1rio chamar a estrutura ",(0,a.kt)("strong",{parentName:"p"},"Use...End use")," . A leitura de um valor de objeto/cole\xe7\xe3o partilhado n\xe3o requer ",(0,a.kt)("strong",{parentName:"p"},"Use...End use"),"."),(0,a.kt)("p",null,"Um cat\xe1logo \xfanico e global devolvido  pelo comando ",(0,a.kt)("inlineCode",{parentName:"p"},"Storage")," est\xe1 sempre dispon\xedvel em todo o banco de dados e seus componentes, e pode ser utilizado para armazenar todos os objetos e cole\xe7\xf5es compartidos."),(0,a.kt)("h2",n({},{id:"utiliza\xe7\xe3o-de-objetos-ou-cole\xe7\xf5es-compartidos"}),"Utiliza\xe7\xe3o de objetos ou cole\xe7\xf5es compartidos"),(0,a.kt)("p",null,"Uma vez instanciados com os comandos ",(0,a.kt)("inlineCode",{parentName:"p"},"New shared object")," ou ",(0,a.kt)("inlineCode",{parentName:"p"},"New shared collection")," , as propriedades e os elementos do objeto/cole\xe7\xe3o partilhados podem ser modificados ou lidos a partir de qualquer processo da aplica\xe7\xe3o, sob determinadas condi\xe7\xf5es."),(0,a.kt)("h3",n({},{id:"modifica\xe7\xe3o"}),"Modifica\xe7\xe3o"),(0,a.kt)("p",null,"As modifica\xe7\xf5es podem ser aplicadas a objetos partilhados e cole\xe7\xf5es partilhadas:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"adicionar ou remover propriedades de objectos,"),(0,a.kt)("li",{parentName:"ul"},"adicionar ou editar valores (desde que sejam suportados em objetos partilhados), incluindo outros objetos partilhados ou cole\xe7\xf5es (que criam um grupo partilhado, ver abaixo).")),(0,a.kt)("p",null,"Todas as instru\xe7\xf5es de modifica\xe7\xe3o num objeto ou cole\xe7\xe3o partilhados t\xeam de ser protegidas dentro de um bloco ",(0,a.kt)("a",n({parentName:"p"},{href:"#use-end-use"}),(0,a.kt)("inlineCode",{parentName:"a"},"Use...End use"))," , caso contr\xe1rio \xe9 gerado um erro."),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"}),' $s_obj:=New shared object("prop1";"alpha")\n Use($s_obj)\n    $s_obj.prop1:="omega"\n End Use\n')),(0,a.kt)("p",null,"Por conveni\xeancia, todas as fun\xe7\xf5es de cole\xe7\xe3o ",(0,a.kt)("a",n({parentName:"p"},{href:"/docs/pt/19/API/CollectionClass"}))," que modificam o objeto partilhado ou a cole\xe7\xe3o inserem um bloco interno ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," para que n\xe3o tenha de o codificar. Por exemplo:"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'$col:=New shared collection()\n$col.push("alpha") //.push() desencadeia internamente a utiliza\xe7\xe3o Use/End, pelo que n\xe3o \xe9 necess\xe1rio faz\xea-lo voc\xea mesmo\n')),(0,a.kt)("p",null,"Se precisar de executar v\xe1rias modifica\xe7\xf5es na mesma cole\xe7\xe3o, pode proteger todas as modifica\xe7\xf5es com um \xfanico ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," para que as modifica\xe7\xf5es sejam executadas atomicamente."),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"}),'$col:=Storage.mySharedCollection\nUse($col)\n    $col[0]:="omega" //modificar um elemento tem de ser efetuado dentro de Use/End use\n    $col.push("alpha") //.push() desencadeia internamente Use/End use, mas queremos fazer ambas as modifica\xe7\xf5es atomicamente\nEnd Use\n')),(0,a.kt)("p",null,"Um objeto/cole\xe7\xe3o partilhado s\xf3 pode ser modificado por um processo de cada vez. ",(0,a.kt)("inlineCode",{parentName:"p"},"Use")," bloqueia o objeto/cole\xe7\xe3o compartido para outras threads, enquanto que o \xfaltimo ",(0,a.kt)("inlineCode",{parentName:"p"},"End use")," desbloqueia todos os objetos e cole\xe7\xf5es. . A tentativa de modificar um objeto/cole\xe7\xe3o partilhado sem pelo menos um ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," gera um erro. Quando um processo chama ",(0,a.kt)("inlineCode",{parentName:"p"},"Use...End use")," num objeto/cole\xe7\xe3o partilhado que j\xe1 est\xe1 a ser utilizado por outro processo, este \xe9 simplesmente colocado em espera at\xe9 que o ",(0,a.kt)("inlineCode",{parentName:"p"},"End use")," o desbloqueie (n\xe3o \xe9 gerado qualquer erro). Consequentemente, as instru\xe7\xf5es em ",(0,a.kt)("inlineCode",{parentName:"p"},"Use... End use")," estruturas devem ser executadas rapidamente e desbloquear os elementos o mais rapidamente poss\xedvel. Assim, recomenda-se vivamente que se evite modificar um objeto partilhado ou uma cole\xe7\xe3o diretamente a partir da interface, por exemplo, atrav\xe9s de uma caixa de di\xe1logo."),(0,a.kt)("p",null,"A atribui\xe7\xe3o de objectos/colec\xe7\xf5es partilhados a propriedades ou elementos de outros objectos/colec\xe7\xf5es partilhados \xe9 permitida e cria ",(0,a.kt)("strong",{parentName:"p"},"grupos partilhados"),". Um grupo partilhado \xe9 criado automaticamente quando um objeto/cole\xe7\xe3o partilhado \xe9 definido como valor de propriedade ou elemento de outro objeto/cole\xe7\xe3o partilhado. Os grupos partilhados permitem o aninhamento de objectos e colec\xe7\xf5es partilhados, mas imp\xf5em regras adicionais:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Note that, unlike standard shared objects, the ",(0,a.kt)("inlineCode",{parentName:"li"},"storage")," object does not create a shared group when shared objects/collections are added as its properties. This exception allows the ",(0,a.kt)("strong",{parentName:"li"},"Storage")," object to be used without locking all connected shared objects or collections."),(0,a.kt)("li",{parentName:"ul"},"A shared object/collection can only belong to one shared group. An error is returned if you try to set an already grouped shared object/collection to a different group."),(0,a.kt)("li",{parentName:"ul"},"Grouped shared objects/collections cannot be ungrouped. Once included in a shared group, a shared object/collection is linked permanently to that group during the whole session. Even if all references of an object/collection are removed from the parent object/collection, they will remain linked.")),(0,a.kt)("p",null,"Please refer to example 2 for an illustration of shared group rules."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")," Shared groups are managed through an internal property named ",(0,a.kt)("em",{parentName:"p"},"locking identifier"),". For detailed information on this value, please refer to the 4D Developer's guide."),(0,a.kt)("h3",n({},{id:"leitura"}),"Leitura"),(0,a.kt)("p",null,"Ao chamar a ",(0,a.kt)("inlineCode",{parentName:"p"},"Use")," em um objeto/colecci\xf3n compartido de um grupo se bloquear\xe3o as propriedades/elementos de todos os objetos/cole\xe7\xf5es compartidos que perten\xe7am ao mesmo grupo."),(0,a.kt)("p",null,"However, it is necessary to read a shared object/collection within ",(0,a.kt)("inlineCode",{parentName:"p"},"Use... End use")," when several values are linked together and must be read at once, for consistency reasons."),(0,a.kt)("h3",n({},{id:"duplica\xe7\xe3o"}),"Duplica\xe7\xe3o"),(0,a.kt)("p",null,"Calling ",(0,a.kt)("inlineCode",{parentName:"p"},"OB Copy")," with a shared object (or with an object containing shared object(s) as properties) is possible, but will return a standard (not shared) object including its contained objects (if any)."),(0,a.kt)("h3",n({},{id:"storage"}),"Storage"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Storage")," is a unique shared object, automatically available on each application and machine. You can use this object to reference all shared objects/collections defined during the session that you want to be available from any preemptive or standard processes. This shared object is returned by the ",(0,a.kt)("inlineCode",{parentName:"p"},"Storage")," command."),(0,a.kt)("p",null,"Note that, unlike standard shared objects, the ",(0,a.kt)("inlineCode",{parentName:"p"},"storage")," object does not create a shared group when shared objects/collections are added as its properties. This exception allows the ",(0,a.kt)("strong",{parentName:"p"},"Storage")," object to be used without locking all connected shared objects or collections."),(0,a.kt)("p",null,"For more information, refer to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Storage")," command description."),(0,a.kt)("h2",n({},{id:"use-end-use"}),"Use... End use"),(0,a.kt)("p",null,"The formal syntax of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Use... End use")," structure is:"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"})," Use(Shared_object_or_Shared_collection)\n    statement(s)\n End use\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Use... End use")," structure defines a sequence of statements that will execute tasks on the ",(0,a.kt)("em",{parentName:"p"},"Shared_object_or_Shared_collection")," parameter under the protection of an internal semaphore. ",(0,a.kt)("em",{parentName:"p"},"Shared_object_or_Shared_collection")," can be any valid shared object or shared collection."),(0,a.kt)("p",null,"Shared objects and shared collections are designed to allow communication between processes, in particular, ",(0,a.kt)("strong",{parentName:"p"},"preemptive 4D processes"),". They can be passed by reference as parameters from a process to another one. Surrounding modifications on shared objects or shared collections by the ",(0,a.kt)("inlineCode",{parentName:"p"},"Use... End use")," keywords is mandatory to prevent concurrent access between processes."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Once the ",(0,a.kt)("strong",{parentName:"li"},"Use")," line is successfully executed, all ",(0,a.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties/elements are locked for all other process in write access until the corresponding ",(0,a.kt)("inlineCode",{parentName:"li"},"End use")," line is executed."),(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("em",{parentName:"li"},"statement(s)")," sequence can execute any modification on the Shared_object_or_Shared_collection properties/elements without risk of concurrent access."),(0,a.kt)("li",{parentName:"ul"},"If another shared object or collection is added as a property of the ",(0,a.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," parameter, they become connected within the same shared group (see ",(0,a.kt)("strong",{parentName:"li"},"Using shared objects or collections"),")."),(0,a.kt)("li",{parentName:"ul"},"If another process tries to access one of the ",(0,a.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," properties or connected properties while a ",(0,a.kt)("strong",{parentName:"li"},"Use... End use")," sequence is being executed, it is automatically put on hold and waits until the current sequence is terminated."),(0,a.kt)("li",{parentName:"ul"},"A linha ",(0,a.kt)("strong",{parentName:"li"},"End use")," desbloqueia as propriedades ",(0,a.kt)("em",{parentName:"li"},"Shared_object_or_Shared_collection")," e todos os objetos que compartem o mesmo identificador de bloqueio."),(0,a.kt)("li",{parentName:"ul"},"Several ",(0,a.kt)("strong",{parentName:"li"},"Use... End use")," structures can be nested in the 4D code. In the case of a group, each ",(0,a.kt)("strong",{parentName:"li"},"Use")," increments the locking counter of the group and each ",(0,a.kt)("strong",{parentName:"li"},"End use")," decrements it; all properties/elements will be released only when the last ",(0,a.kt)("strong",{parentName:"li"},"End use")," call sets the locking counter to 0.")),(0,a.kt)("admonition",n({},{type:"note"}),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"Note:")," If a collection method modifies a shared collection, an internal ",(0,a.kt)("strong",{parentName:"p"},"Use")," is automatically called for this shared collection while the function is executed.")),(0,a.kt)("h2",n({},{id:"exemplo-1"}),"Exemplo 1"),(0,a.kt)("p",null,"You want to launch several processes that perform an inventory task on different products and update the same shared object. The main process instantiates an empty shared object and then, launches the other processes, passing the shared object and the products to count as parameters:"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"})," Vis\xe3o Geral\n")),(0,a.kt)("p",null,'In the "HowMany" method, inventory is done and the $inventory shared object is updated as soon as possible:'),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"}),"    C_TEXT($1)\n C_TEXT($what)\n C_OBJECT($2)\n C_OBJECT($inventory)\n $what:=$1 //for better readability\n $inventory:=$2\n\n $count:=CountMethod($what) //method to count products\n Use($inventory) //use shared object\n    $inventory[$what]:=$count  //save the results for this item\n End use\n")),(0,a.kt)("h2",n({},{id:"exemplo-2"}),"Exemplo 2"),(0,a.kt)("p",null,"The following examples highlight specific rules when handling shared groups:"),(0,a.kt)("pre",null,(0,a.kt)("code",n({parentName:"pre"},{className:"language-4d"})," $ob1:=New shared object\n $ob2:=New shared object\n Use($ob1)\n    $ob1.a:=$ob2  //group 1 is created\n End use\n\n $ob3:=New shared object\n $ob4:=New shared object\n Use($ob3)\n    $ob3.a:=$ob4  //group 2 is created\n End use\n\n Use($ob1) //use an object from group 1\n    $ob1.b:=$ob4  //ERROR\n  //$ob4 already belongs to another group\n  //assignment is not allowed\n End use\n\n Use($ob3)\n    $ob3.a:=Null //remove any reference to $ob4 from group 2\n End use\n\n Use($ob1) //use an object from group 1\n    $ob1.b:=$ob4  //ERROR\n  //$ob4 still belongs to group 2\n  //assignment is not allowed\n End use\n")))}u.isMDXComponent=!0}}]);