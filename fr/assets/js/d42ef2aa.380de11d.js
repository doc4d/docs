"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[14594],{606087:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=n(474848),r=n(28453);const o={id:"process-activity",title:"Process activity",displayed_sidebar:"docs"},i=void 0,c={id:"commands/process-activity",title:"Process activity",description:"Process activity () ObjectProcess activity ( sessionID ) Object",source:"@site/docs/commands/process-activity.md",sourceDirName:"commands",slug:"/commands/process-activity",permalink:"/docs/fr/next/commands/process-activity",draft:!1,unlisted:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20commands%2Fprocess-activity.md%20(current)&body=Please%20enter%20your%20comment%3A",tags:[],version:"current",frontMatter:{id:"process-activity",title:"Process activity",displayed_sidebar:"docs"},sidebar:"docs",previous:{title:"Process aborted",permalink:"/docs/fr/next/commands/process-aborted"},next:{title:"Process info",permalink:"/docs/fr/next/commands/process-info"}},d={},l=[{value:"Description",id:"description",level:4},{value:"Example 1",id:"example-1",level:4},{value:"Example 2",id:"example-2",level:4},{value:"See also",id:"see-also",level:4}];function a(e){const s={a:"a",admonition:"admonition",br:"br",code:"code",details:"details",em:"em",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",summary:"summary",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Process activity"})," () : Object",(0,t.jsx)(s.br,{}),(0,t.jsx)(s.strong,{children:"Process activity"})," ( ",(0,t.jsx)(s.em,{children:"options"})," ) : Object",(0,t.jsx)(s.br,{}),(0,t.jsx)(s.strong,{children:"Process activity"})," ( ",(0,t.jsx)(s.em,{children:"sessionID"})," ) : Object",(0,t.jsx)(s.br,{}),(0,t.jsx)(s.strong,{children:"Process activity"})," ( ",(0,t.jsx)(s.em,{children:"sessionID"})," ; ",(0,t.jsx)(s.em,{children:"options"})," ) : Object"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Parameter"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"sessionID"}),(0,t.jsx)(s.td,{children:"Text"}),(0,t.jsx)(s.td,{children:"\u2192"}),(0,t.jsx)(s.td,{children:"Session ID"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"options"}),(0,t.jsx)(s.td,{children:"Integer"}),(0,t.jsx)(s.td,{children:"\u2192"}),(0,t.jsx)(s.td,{children:"Return options"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Function result"}),(0,t.jsx)(s.td,{children:"Object"}),(0,t.jsx)(s.td,{children:"\u2190"}),(0,t.jsx)(s.td,{children:"Snapshot of running processes and/or (4D Server only) user sessions"})]})]})]}),"\n",(0,t.jsxs)(s.details,{children:[(0,t.jsx)(s.summary,{children:"History"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Release"}),(0,t.jsx)(s.th,{children:"Changes"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"20 R7"}),(0,t.jsx)(s.td,{children:"Support of sessionID parameter"})]})})]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.strong,{children:"Process activity"})," command returns a snapshot of running processes and/or (4D Server only) connected user sessions at a given time. This command returns all processes, including internal processes that are not reachable by the ",(0,t.jsx)(s.a,{href:"/docs/fr/next/commands/process-info",children:"Process info"})," command."]}),"\n",(0,t.jsxs)(s.p,{children:["By default when used without any parameters, ",(0,t.jsx)(s.strong,{children:"Process activity"})," returns an object containing the following properties:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:'"processes", a collection of all processes'}),"\n",(0,t.jsx)(s.li,{children:'"sessions" (4D Server only), a collection of all sessions'}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["On 4D Server, you can filter information to be returned using the optional ",(0,t.jsx)(s.em,{children:"sessionID"})," and ",(0,t.jsx)(s.em,{children:"options"})," parameters:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["If you pass a user session ID in the ",(0,t.jsx)(s.em,{children:"sessionID"})," parameter, the command only returns information related to this session. By default if the ",(0,t.jsx)(s.em,{children:"options"})," parameter is omitted, the returned object contains a collection with all processes related to the session and a collection with a single object describing the session. If you pass an invalid session ID, a ",(0,t.jsx)(s.strong,{children:"null"})," object is returned."]}),"\n",(0,t.jsxs)(s.li,{children:["You can select the collection(s) to return by passing one of the following constants in the ",(0,t.jsx)(s.em,{children:"options"}),' parameter:\n| Constant                     \t| Type                 \t| Value                                                             \t| Comment                                                       \t|\n|------------------------------\t|----------------------\t|-------------------------------------------------------------------\t|---------------------------------------------------------------\t|\n| Processes and sessions       \t| Longint              \t| 0                                                                 \t| Returns both "processes" and "sessions" lists (default value) \t|\n| Processes only               \t| Longint              \t| 1                                                                 \t| Returns only the "processes" list                             \t|\n| Sessions only                \t| Longint              \t| 2                                                                 \t| Returns only the "sessions" list                              \t|']}),"\n"]}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["When executed on 4D in remote or local mode, ",(0,t.jsx)(s.code,{children:"Process activity"})," always returns the list of running processes (",(0,t.jsx)(s.em,{children:"sessionID"})," and ",(0,t.jsx)(s.em,{children:"options"})," parameters are ignored)."]})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Sessions"})}),"\n",(0,t.jsxs)(s.p,{children:['The "sessions" property contains a collection of objects describing all running sessions on the server. For a description of session object properties, please refer to the ',(0,t.jsx)(s.a,{href:"/docs/fr/next/commands/session-info",children:(0,t.jsx)(s.code,{children:"Session info"})})," command."]}),"\n",(0,t.jsx)(s.admonition,{title:"Notes",type:"note",children:(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["You can get the object of a session using the ",(0,t.jsx)(s.a,{href:"session.md",children:"Session"})," command."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"Process activity"})," returns remote client sessions, stored procedure session and rest sessions but not Web sessions (limitation)."]}),"\n"]})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Processes"})}),"\n",(0,t.jsxs)(s.p,{children:['The "processes" property contains a collection of process objects describing all running processes. For a description of process object properties, please refer to the ',(0,t.jsx)(s.a,{href:"/docs/fr/next/commands/process-info",children:(0,t.jsx)(s.code,{children:"Process info"})})," command."]}),"\n",(0,t.jsxs)(s.p,{children:["On the server, the ",(0,t.jsx)(s.code,{children:"Process activity"}),' command returns an additional "session" property:']}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Additional property"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"session"}),(0,t.jsx)(s.td,{children:"Object"}),(0,t.jsxs)(s.td,{children:["The ",(0,t.jsx)(s.a,{href:"../API/SessionClass.md#info",children:(0,t.jsx)(s.code,{children:".info"})})," property of the session in which the process is running. Undefined if the ",(0,t.jsx)(s.code,{children:"Processes only"})," parameter is passed."]}),(0,t.jsx)(s.td,{})]})})]}),"\n",(0,t.jsx)(s.h4,{id:"example-1",children:"Example 1"}),"\n",(0,t.jsx)(s.p,{children:"You want to get the collection of all user sessions:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-4d",children:'\xa0\xa0//To be executed on the server\n\xa0\n\xa0var $o : Object\n\xa0var $i : Integer\n vat $processName;$userName : Text\n\n\xa0\n $o:=Process activity //Get process & session info\n For($i;0;($o.processes.length)-1) //Iterate over the "processes" collection\n    $processName:=$o.processes[$i].name\n    $userName:=String($o.processes[$i].session.userName) // Easy access to userName\n  //use String because session object might be undefined\n End for\n'})}),"\n",(0,t.jsx)(s.h4,{id:"example-2",children:"Example 2"}),"\n",(0,t.jsx)(s.p,{children:"You want to get all processes related to the current session:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-4d",children:"  // to be executed on the server\n \n var $sessionID : Text:=Session.id\n var $o : Object\n \n $o:=Process activity($sessionID ;Processes only)\n\n"})}),"\n",(0,t.jsx)(s.h4,{id:"see-also",children:"See also"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"../commands-legacy/session-storage.md",children:"Session storage"}),(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.a,{href:"../commands-legacy/web-get-server-info.md",children:"WEB Get server info"})]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var t=n(296540);const r={},o=t.createContext(r);function i(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);