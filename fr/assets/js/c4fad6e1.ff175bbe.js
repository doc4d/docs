"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[36302],{603905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(667294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,f=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},759163:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});r(667294);var n=r(603905);function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},a.apply(this,arguments)}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const i={id:"onAfterKeystroke",title:"On After Keystroke"},l=void 0,s={unversionedId:"Events/onAfterKeystroke",id:"version-20-R4/Events/onAfterKeystroke",title:"On After Keystroke",description:"|Code|Can be called by|Definition|",source:"@site/versioned_docs/version-20-R4/Events/onAfterKeystroke.md",sourceDirName:"Events",slug:"/Events/onAfterKeystroke",permalink:"/docs/fr/Events/onAfterKeystroke",draft:!1,editUrl:"https://github.com/4d/docs/issues/new?title=Comment%20on%20Events%2FonAfterKeystroke.md%20(20-R4)&body=Please%20enter%20your%20comment%3A",tags:[],version:"20-R4",frontMatter:{id:"onAfterKeystroke",title:"On After Keystroke"},sidebar:"docs",previous:{title:"On After Edit",permalink:"/docs/fr/Events/onAfterEdit"},next:{title:"On After Sort",permalink:"/docs/fr/Events/onAfterSort"}},c={},d=[{value:"Description",id:"description",level:2},{value:"Keystroke sequence",id:"keystroke-sequence",level:3},{value:"See also",id:"see-also",level:3}],p={toc:d};function u(e){var{components:t}=e,r=o(e,["components"]);return(0,n.kt)("wrapper",a({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",a({parentName:"tr"},{align:null}),"Code"),(0,n.kt)("th",a({parentName:"tr"},{align:null}),"Can be called by"),(0,n.kt)("th",a({parentName:"tr"},{align:null}),"Definition"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",a({parentName:"tr"},{align:null}),"28"),(0,n.kt)("td",a({parentName:"tr"},{align:null}),(0,n.kt)("a",a({parentName:"td"},{href:"FormObjects/writeProArea_overview"}),"4D Write Pro area")," - ",(0,n.kt)("a",a({parentName:"td"},{href:"/docs/fr/FormObjects/comboBoxOverview"}),"Combo Box")," - Form - ",(0,n.kt)("a",a({parentName:"td"},{href:"/docs/fr/FormObjects/inputOverview"}),"Input")," - ",(0,n.kt)("a",a({parentName:"td"},{href:"/docs/fr/FormObjects/listboxOverview"}),"List Box")," - ",(0,n.kt)("a",a({parentName:"td"},{href:"/docs/fr/FormObjects/listboxOverview#list-box-columns"}),"List Box Column")),(0,n.kt)("td",a({parentName:"tr"},{align:null}),"A character is about to be entered in the object that has the focus. ",(0,n.kt)("inlineCode",{parentName:"td"},"Get edited text")," returns the object's text ",(0,n.kt)("strong",{parentName:"td"},"including")," this character.")))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"History"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",a({parentName:"tr"},{align:null}),"Version"),(0,n.kt)("th",a({parentName:"tr"},{align:null}),"Changes"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",a({parentName:"tr"},{align:null}),"v18 R5"),(0,n.kt)("td",a({parentName:"tr"},{align:null}),"- Support in non-enterable list boxes - The event is now triggered after IME validation"))))),(0,n.kt)("h2",a({},{id:"description"}),"Description"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"On After Keystroke")," event can generally be replaced by the ",(0,n.kt)("a",a({parentName:"p"},{href:"/docs/fr/Events/onAfterEdit"}),(0,n.kt)("inlineCode",{parentName:"a"},"On After Edit"))," event (see below).")),(0,n.kt)("p",null,"After the ",(0,n.kt)("a",a({parentName:"p"},{href:"/docs/fr/Events/onBeforeKeystroke"}),(0,n.kt)("inlineCode",{parentName:"a"},"On Before Keystroke"))," and ",(0,n.kt)("inlineCode",{parentName:"p"},"On After Keystroke")," event properties are selected for an object, you can detect and handle the keystrokes within the object, using the ",(0,n.kt)("inlineCode",{parentName:"p"},"FORM event")," command that will return ",(0,n.kt)("inlineCode",{parentName:"p"},"On Before Keystroke")," and then ",(0,n.kt)("inlineCode",{parentName:"p"},"On After Keystroke")," (for more information, please refer to the description of the ",(0,n.kt)("inlineCode",{parentName:"p"},"Get edited text")," command)."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"These events are also activated by language commands that simulate a user action like ",(0,n.kt)("inlineCode",{parentName:"p"},"POST KEY"),".")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"On After Keystroke")," event is not generated:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"in ",(0,n.kt)("a",a({parentName:"li"},{href:"/docs/fr/FormObjects/listboxOverview#list-box-columns"}),"list box columns")," method except when a cell is being edited (however it is generated in any cases in the ",(0,n.kt)("a",a({parentName:"li"},{href:"/docs/fr/FormObjects/listboxOverview"}),"list box")," method),"),(0,n.kt)("li",{parentName:"ul"},"when user modifications are not carried out using the keyboard (paste, drag-and-drop, checkbox, drop down list, combo box). To process these events, you must use ",(0,n.kt)("a",a({parentName:"li"},{href:"/docs/fr/Events/onAfterEdit"}),(0,n.kt)("inlineCode",{parentName:"a"},"On After Edit")),".")),(0,n.kt)("h3",a({},{id:"keystroke-sequence"}),"Keystroke sequence"),(0,n.kt)("p",null,"When an entry requires a sequence of keystrokes, the ",(0,n.kt)("a",a({parentName:"p"},{href:"/docs/fr/Events/onBeforeKeystroke"}),(0,n.kt)("inlineCode",{parentName:"a"},"On Before Keystroke"))," and ","[",(0,n.kt)("inlineCode",{parentName:"p"},"On After Keystroke event"),"]"," events are generated only when the entry is fully validaded by the user. The ",(0,n.kt)("inlineCode",{parentName:"p"},"Keystroke")," command returns the validated character. This case mainly occurs:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'when using "dead" keys such as ^ or ~: events are generated only when the extended character is eventuelly entered (e.g. "\xea" or \xf1),'),(0,n.kt)("li",{parentName:"ul"},"when an IME (Input Code Editor) displays an intermediary dialog box where the user can enter a combination of characters: events are generated only when the IME dialog is validated.")),(0,n.kt)("h3",a({},{id:"see-also"}),"See also"),(0,n.kt)("p",null,(0,n.kt)("a",a({parentName:"p"},{href:"/docs/fr/Events/onBeforeKeystroke"}),"On Before Keystroke"),"."))}u.isMDXComponent=!0}}]);